### YamlMime:ManagedReference
items:
- uid: Engine.Networking.ConnectionManager
  commentId: T:Engine.Networking.ConnectionManager
  id: ConnectionManager
  parent: Engine.Networking
  children:
  - Engine.Networking.ConnectionManager.#ctor(Engine.Networking.ConnectionManager.ListenerType)
  - Engine.Networking.ConnectionManager.Disconnect
  - Engine.Networking.ConnectionManager.GetPacket``1
  - Engine.Networking.ConnectionManager.Init
  - Engine.Networking.ConnectionManager.isServer
  - Engine.Networking.ConnectionManager.NotifyClientConnected
  - Engine.Networking.ConnectionManager.NotifyClientDisconnected
  - Engine.Networking.ConnectionManager.NotifyFailedConnect
  - Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  - Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  - Engine.Networking.ConnectionManager.NotifyPacketReceived
  - Engine.Networking.ConnectionManager.Process
  - Engine.Networking.ConnectionManager.SendPacketToClient(Unity.Networking.Transport.NetworkConnection,Engine.Networking.Packet)
  - Engine.Networking.ConnectionManager.SendPacketToServer(Engine.Networking.Packet)
  - Engine.Networking.ConnectionManager.Shutdown
  - Engine.Networking.ConnectionManager.Start
  langs:
  - csharp
  - vb
  name: ConnectionManager
  nameWithType: ConnectionManager
  fullName: Engine.Networking.ConnectionManager
  type: Class
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: ConnectionManager
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 19
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nManages connections for server and client\n"
  example: []
  syntax:
    content: 'public class ConnectionManager : Manager'
    content.vb: >-
      Public Class ConnectionManager
          Inherits Manager
  inheritance:
  - System.Object
  - Engine.Factory.Manager
  inheritedMembers:
  - Engine.Factory.Manager.LoadGameTask(Engine.Loading.ClientLoadData)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Networking.ConnectionManager.#ctor(Engine.Networking.ConnectionManager.ListenerType)
  commentId: M:Engine.Networking.ConnectionManager.#ctor(Engine.Networking.ConnectionManager.ListenerType)
  id: '#ctor(Engine.Networking.ConnectionManager.ListenerType)'
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: ConnectionManager(ConnectionManager.ListenerType)
  nameWithType: ConnectionManager.ConnectionManager(ConnectionManager.ListenerType)
  fullName: Engine.Networking.ConnectionManager.ConnectionManager(Engine.Networking.ConnectionManager.ListenerType)
  type: Constructor
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: .ctor
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 30
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ConnectionManager(ConnectionManager.ListenerType listenerType)
    parameters:
    - id: listenerType
      type: Engine.Networking.ConnectionManager.ListenerType
      description: Whether the connection manager is the server or not
    content.vb: Public Sub New(listenerType As ConnectionManager.ListenerType)
  overload: Engine.Networking.ConnectionManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.Init
  commentId: M:Engine.Networking.ConnectionManager.Init
  id: Init
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: ConnectionManager.Init()
  fullName: Engine.Networking.ConnectionManager.Init()
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Init
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 42
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nCalled on start\n"
  example: []
  syntax:
    content: public override void Init()
    content.vb: Public Overrides Sub Init
  overridden: Engine.Factory.Manager.Init
  overload: Engine.Networking.ConnectionManager.Init*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Networking.ConnectionManager.Process
  commentId: M:Engine.Networking.ConnectionManager.Process
  id: Process
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: ConnectionManager.Process()
  fullName: Engine.Networking.ConnectionManager.Process()
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Process
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 52
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nCalled every frame on main thread\n"
  example: []
  syntax:
    content: public override void Process()
    content.vb: Public Overrides Sub Process
  overridden: Engine.Factory.Manager.Process
  overload: Engine.Networking.ConnectionManager.Process*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Networking.ConnectionManager.Shutdown
  commentId: M:Engine.Networking.ConnectionManager.Shutdown
  id: Shutdown
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: ConnectionManager.Shutdown()
  fullName: Engine.Networking.ConnectionManager.Shutdown()
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Shutdown
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 67
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nCalled on program shutdown\n"
  example: []
  syntax:
    content: public override void Shutdown()
    content.vb: Public Overrides Sub Shutdown
  overridden: Engine.Factory.Manager.Shutdown
  overload: Engine.Networking.ConnectionManager.Shutdown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Networking.ConnectionManager.isServer
  commentId: P:Engine.Networking.ConnectionManager.isServer
  id: isServer
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: isServer
  nameWithType: ConnectionManager.isServer
  fullName: Engine.Networking.ConnectionManager.isServer
  type: Property
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: isServer
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 96
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nReadonly if instance is running server or client\n"
  example: []
  syntax:
    content: public virtual bool isServer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isServer As Boolean
  overload: Engine.Networking.ConnectionManager.isServer*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Engine.Networking.ConnectionManager.NotifyClientDisconnected
  commentId: E:Engine.Networking.ConnectionManager.NotifyClientDisconnected
  id: NotifyClientDisconnected
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: NotifyClientDisconnected
  nameWithType: ConnectionManager.NotifyClientDisconnected
  fullName: Engine.Networking.ConnectionManager.NotifyClientDisconnected
  type: Event
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: NotifyClientDisconnected
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 162
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nEvent for client disconnection\n"
  example: []
  syntax:
    content: public event ConnectionManager.NotifyClientDisconnectedDelegate NotifyClientDisconnected
    return:
      type: Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
    content.vb: Public Event NotifyClientDisconnected As ConnectionManager.NotifyClientDisconnectedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.NotifyClientConnected
  commentId: E:Engine.Networking.ConnectionManager.NotifyClientConnected
  id: NotifyClientConnected
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: NotifyClientConnected
  nameWithType: ConnectionManager.NotifyClientConnected
  fullName: Engine.Networking.ConnectionManager.NotifyClientConnected
  type: Event
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: NotifyClientConnected
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 167
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nEvent for a client connection\n"
  example: []
  syntax:
    content: public event ConnectionManager.NotifyClientConnectedDelegate NotifyClientConnected
    return:
      type: Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
    content.vb: Public Event NotifyClientConnected As ConnectionManager.NotifyClientConnectedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.NotifyPacketReceived
  commentId: E:Engine.Networking.ConnectionManager.NotifyPacketReceived
  id: NotifyPacketReceived
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: NotifyPacketReceived
  nameWithType: ConnectionManager.NotifyPacketReceived
  fullName: Engine.Networking.ConnectionManager.NotifyPacketReceived
  type: Event
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: NotifyPacketReceived
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 172
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nEvent for a packet being received\n"
  example: []
  syntax:
    content: public event ConnectionManager.NotifyPacketReceivedDelegate NotifyPacketReceived
    return:
      type: Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
    content.vb: Public Event NotifyPacketReceived As ConnectionManager.NotifyPacketReceivedDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.NotifyFailedConnect
  commentId: E:Engine.Networking.ConnectionManager.NotifyFailedConnect
  id: NotifyFailedConnect
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: NotifyFailedConnect
  nameWithType: ConnectionManager.NotifyFailedConnect
  fullName: Engine.Networking.ConnectionManager.NotifyFailedConnect
  type: Event
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: NotifyFailedConnect
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 177
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nEvent for failing to connect to server\n"
  example: []
  syntax:
    content: public event ConnectionManager.NotifyFailedConnectDelegate NotifyFailedConnect
    return:
      type: Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
    content.vb: Public Event NotifyFailedConnect As ConnectionManager.NotifyFailedConnectDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  commentId: E:Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  id: NotifyOnDisconnectedFromServer
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: NotifyOnDisconnectedFromServer
  nameWithType: ConnectionManager.NotifyOnDisconnectedFromServer
  fullName: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  type: Event
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: NotifyOnDisconnectedFromServer
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 182
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nEvent for being disconnected from server\n"
  example: []
  syntax:
    content: public event ConnectionManager.NotifyOnDisconnectedFromServerDelegate NotifyOnDisconnectedFromServer
    return:
      type: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
    content.vb: Public Event NotifyOnDisconnectedFromServer As ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  commentId: E:Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  id: NotifyOnConnectedToServer
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: NotifyOnConnectedToServer
  nameWithType: ConnectionManager.NotifyOnConnectedToServer
  fullName: Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  type: Event
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: NotifyOnConnectedToServer
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 187
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nEvent for connecting to the server\n"
  example: []
  syntax:
    content: public event ConnectionManager.NotifyOnConnectedToServerDelegate NotifyOnConnectedToServer
    return:
      type: Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
    content.vb: Public Event NotifyOnConnectedToServer As ConnectionManager.NotifyOnConnectedToServerDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.Start
  commentId: M:Engine.Networking.ConnectionManager.Start
  id: Start
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: ConnectionManager.Start()
  fullName: Engine.Networking.ConnectionManager.Start()
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Start
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 223
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nStart method\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Engine.Networking.ConnectionManager.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.GetPacket``1
  commentId: M:Engine.Networking.ConnectionManager.GetPacket``1
  id: GetPacket``1
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: GetPacket<T>()
  nameWithType: ConnectionManager.GetPacket<T>()
  fullName: Engine.Networking.ConnectionManager.GetPacket<T>()
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: GetPacket
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 501
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nGet packet instance by type\n"
  example: []
  syntax:
    content: >-
      public T GetPacket<T>()
          where T : Packet
    typeParameters:
    - id: T
      description: The packet type
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function GetPacket(Of T As Packet) As T
  overload: Engine.Networking.ConnectionManager.GetPacket*
  nameWithType.vb: ConnectionManager.GetPacket(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Networking.ConnectionManager.GetPacket(Of T)()
  name.vb: GetPacket(Of T)()
- uid: Engine.Networking.ConnectionManager.SendPacketToServer(Engine.Networking.Packet)
  commentId: M:Engine.Networking.ConnectionManager.SendPacketToServer(Engine.Networking.Packet)
  id: SendPacketToServer(Engine.Networking.Packet)
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: SendPacketToServer(Packet)
  nameWithType: ConnectionManager.SendPacketToServer(Packet)
  fullName: Engine.Networking.ConnectionManager.SendPacketToServer(Engine.Networking.Packet)
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: SendPacketToServer
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 518
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nMethod for sending packet to server. \n"
  example: []
  syntax:
    content: public void SendPacketToServer(Packet packet)
    parameters:
    - id: packet
      type: Engine.Networking.Packet
      description: The packet
    content.vb: Public Sub SendPacketToServer(packet As Packet)
  overload: Engine.Networking.ConnectionManager.SendPacketToServer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.SendPacketToClient(Unity.Networking.Transport.NetworkConnection,Engine.Networking.Packet)
  commentId: M:Engine.Networking.ConnectionManager.SendPacketToClient(Unity.Networking.Transport.NetworkConnection,Engine.Networking.Packet)
  id: SendPacketToClient(Unity.Networking.Transport.NetworkConnection,Engine.Networking.Packet)
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: SendPacketToClient(NetworkConnection, Packet)
  nameWithType: ConnectionManager.SendPacketToClient(NetworkConnection, Packet)
  fullName: Engine.Networking.ConnectionManager.SendPacketToClient(Unity.Networking.Transport.NetworkConnection, Engine.Networking.Packet)
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: SendPacketToClient
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 534
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nMethod for sending packet to client\n"
  example: []
  syntax:
    content: public void SendPacketToClient(NetworkConnection client, Packet packet)
    parameters:
    - id: client
      type: Unity.Networking.Transport.NetworkConnection
      description: Client connection to receive the packet
    - id: packet
      type: Engine.Networking.Packet
      description: The packet
    content.vb: Public Sub SendPacketToClient(client As NetworkConnection, packet As Packet)
  overload: Engine.Networking.ConnectionManager.SendPacketToClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Engine.Networking.ConnectionManager.Disconnect
  commentId: M:Engine.Networking.ConnectionManager.Disconnect
  id: Disconnect
  parent: Engine.Networking.ConnectionManager
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: ConnectionManager.Disconnect()
  fullName: Engine.Networking.ConnectionManager.Disconnect()
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Managers/ConnectionManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Disconnect
    path: ../Assets/Engine/Networking/Managers/ConnectionManager.cs
    startLine: 602
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking
  summary: "\nClient disconnect function\n"
  example: []
  syntax:
    content: public void Disconnect()
    content.vb: Public Sub Disconnect
  overload: Engine.Networking.ConnectionManager.Disconnect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Engine.Networking
  commentId: N:Engine.Networking
  name: Engine.Networking
  nameWithType: Engine.Networking
  fullName: Engine.Networking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Factory.Manager
  commentId: T:Engine.Factory.Manager
  parent: Engine.Factory
  name: Manager
  nameWithType: Manager
  fullName: Engine.Factory.Manager
- uid: Engine.Factory.Manager.LoadGameTask(Engine.Loading.ClientLoadData)
  commentId: M:Engine.Factory.Manager.LoadGameTask(Engine.Loading.ClientLoadData)
  parent: Engine.Factory.Manager
  name: LoadGameTask(ClientLoadData)
  nameWithType: Manager.LoadGameTask(ClientLoadData)
  fullName: Engine.Factory.Manager.LoadGameTask(Engine.Loading.ClientLoadData)
  spec.csharp:
  - uid: Engine.Factory.Manager.LoadGameTask(Engine.Loading.ClientLoadData)
    name: LoadGameTask
    nameWithType: Manager.LoadGameTask
    fullName: Engine.Factory.Manager.LoadGameTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: Engine.Loading.ClientLoadData
    name: ClientLoadData
    nameWithType: ClientLoadData
    fullName: Engine.Loading.ClientLoadData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.LoadGameTask(Engine.Loading.ClientLoadData)
    name: LoadGameTask
    nameWithType: Manager.LoadGameTask
    fullName: Engine.Factory.Manager.LoadGameTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: Engine.Loading.ClientLoadData
    name: ClientLoadData
    nameWithType: ClientLoadData
    fullName: Engine.Loading.ClientLoadData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Factory
  commentId: N:Engine.Factory
  name: Engine.Factory
  nameWithType: Engine.Factory
  fullName: Engine.Factory
- uid: Engine.Networking.ConnectionManager.#ctor*
  commentId: Overload:Engine.Networking.ConnectionManager.#ctor
  name: ConnectionManager
  nameWithType: ConnectionManager.ConnectionManager
  fullName: Engine.Networking.ConnectionManager.ConnectionManager
- uid: Engine.Networking.ConnectionManager.ListenerType
  commentId: T:Engine.Networking.ConnectionManager.ListenerType
  parent: Engine.Networking
  name: ConnectionManager.ListenerType
  nameWithType: ConnectionManager.ListenerType
  fullName: Engine.Networking.ConnectionManager.ListenerType
- uid: Engine.Factory.Manager.Init
  commentId: M:Engine.Factory.Manager.Init
  parent: Engine.Factory.Manager
  name: Init()
  nameWithType: Manager.Init()
  fullName: Engine.Factory.Manager.Init()
  spec.csharp:
  - uid: Engine.Factory.Manager.Init
    name: Init
    nameWithType: Manager.Init
    fullName: Engine.Factory.Manager.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.Init
    name: Init
    nameWithType: Manager.Init
    fullName: Engine.Factory.Manager.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Networking.ConnectionManager.Init*
  commentId: Overload:Engine.Networking.ConnectionManager.Init
  name: Init
  nameWithType: ConnectionManager.Init
  fullName: Engine.Networking.ConnectionManager.Init
- uid: Engine.Factory.Manager.Process
  commentId: M:Engine.Factory.Manager.Process
  parent: Engine.Factory.Manager
  name: Process()
  nameWithType: Manager.Process()
  fullName: Engine.Factory.Manager.Process()
  spec.csharp:
  - uid: Engine.Factory.Manager.Process
    name: Process
    nameWithType: Manager.Process
    fullName: Engine.Factory.Manager.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.Process
    name: Process
    nameWithType: Manager.Process
    fullName: Engine.Factory.Manager.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Networking.ConnectionManager.Process*
  commentId: Overload:Engine.Networking.ConnectionManager.Process
  name: Process
  nameWithType: ConnectionManager.Process
  fullName: Engine.Networking.ConnectionManager.Process
- uid: Engine.Factory.Manager.Shutdown
  commentId: M:Engine.Factory.Manager.Shutdown
  parent: Engine.Factory.Manager
  name: Shutdown()
  nameWithType: Manager.Shutdown()
  fullName: Engine.Factory.Manager.Shutdown()
  spec.csharp:
  - uid: Engine.Factory.Manager.Shutdown
    name: Shutdown
    nameWithType: Manager.Shutdown
    fullName: Engine.Factory.Manager.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.Shutdown
    name: Shutdown
    nameWithType: Manager.Shutdown
    fullName: Engine.Factory.Manager.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Networking.ConnectionManager.Shutdown*
  commentId: Overload:Engine.Networking.ConnectionManager.Shutdown
  name: Shutdown
  nameWithType: ConnectionManager.Shutdown
  fullName: Engine.Networking.ConnectionManager.Shutdown
- uid: Engine.Networking.ConnectionManager.isServer*
  commentId: Overload:Engine.Networking.ConnectionManager.isServer
  name: isServer
  nameWithType: ConnectionManager.isServer
  fullName: Engine.Networking.ConnectionManager.isServer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
  commentId: T:Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
  parent: Engine.Networking
  name: ConnectionManager.NotifyClientDisconnectedDelegate
  nameWithType: ConnectionManager.NotifyClientDisconnectedDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
- uid: Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
  commentId: T:Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
  parent: Engine.Networking
  name: ConnectionManager.NotifyClientConnectedDelegate
  nameWithType: ConnectionManager.NotifyClientConnectedDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
- uid: Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
  commentId: T:Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
  parent: Engine.Networking
  name: ConnectionManager.NotifyPacketReceivedDelegate
  nameWithType: ConnectionManager.NotifyPacketReceivedDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
- uid: Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
  commentId: T:Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
  parent: Engine.Networking
  name: ConnectionManager.NotifyFailedConnectDelegate
  nameWithType: ConnectionManager.NotifyFailedConnectDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
- uid: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  commentId: T:Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  parent: Engine.Networking
  name: ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  nameWithType: ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
- uid: Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
  commentId: T:Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
  parent: Engine.Networking
  name: ConnectionManager.NotifyOnConnectedToServerDelegate
  nameWithType: ConnectionManager.NotifyOnConnectedToServerDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
- uid: Engine.Networking.ConnectionManager.Start*
  commentId: Overload:Engine.Networking.ConnectionManager.Start
  name: Start
  nameWithType: ConnectionManager.Start
  fullName: Engine.Networking.ConnectionManager.Start
- uid: Engine.Networking.ConnectionManager.GetPacket*
  commentId: Overload:Engine.Networking.ConnectionManager.GetPacket
  name: GetPacket
  nameWithType: ConnectionManager.GetPacket
  fullName: Engine.Networking.ConnectionManager.GetPacket
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Engine.Networking.ConnectionManager.SendPacketToServer*
  commentId: Overload:Engine.Networking.ConnectionManager.SendPacketToServer
  name: SendPacketToServer
  nameWithType: ConnectionManager.SendPacketToServer
  fullName: Engine.Networking.ConnectionManager.SendPacketToServer
- uid: Engine.Networking.Packet
  commentId: T:Engine.Networking.Packet
  parent: Engine.Networking
  name: Packet
  nameWithType: Packet
  fullName: Engine.Networking.Packet
- uid: Engine.Networking.ConnectionManager.SendPacketToClient*
  commentId: Overload:Engine.Networking.ConnectionManager.SendPacketToClient
  name: SendPacketToClient
  nameWithType: ConnectionManager.SendPacketToClient
  fullName: Engine.Networking.ConnectionManager.SendPacketToClient
- uid: Unity.Networking.Transport.NetworkConnection
  commentId: T:Unity.Networking.Transport.NetworkConnection
  parent: Unity.Networking.Transport
  isExternal: true
  name: NetworkConnection
  nameWithType: NetworkConnection
  fullName: Unity.Networking.Transport.NetworkConnection
- uid: Unity.Networking.Transport
  commentId: N:Unity.Networking.Transport
  isExternal: true
  name: Unity.Networking.Transport
  nameWithType: Unity.Networking.Transport
  fullName: Unity.Networking.Transport
- uid: Engine.Networking.ConnectionManager.Disconnect*
  commentId: Overload:Engine.Networking.ConnectionManager.Disconnect
  name: Disconnect
  nameWithType: ConnectionManager.Disconnect
  fullName: Engine.Networking.ConnectionManager.Disconnect
