### YamlMime:ManagedReference
items:
- uid: Engine.Networking.Utility.ByteConverter
  commentId: T:Engine.Networking.Utility.ByteConverter
  id: ByteConverter
  parent: Engine.Networking.Utility
  children:
  - Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  - Engine.Networking.Utility.ByteConverter.getBytes``1(System.Object)
  - Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  - Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  - Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  - Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  - Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  langs:
  - csharp
  - vb
  name: ByteConverter
  nameWithType: ByteConverter
  fullName: Engine.Networking.Utility.ByteConverter
  type: Class
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: ByteConverter
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 8
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nHandles converting value types to bytes\n"
  example: []
  syntax:
    content: public class ByteConverter
    content.vb: Public Class ByteConverter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Networking.Utility.ByteConverter.getBytes``1(System.Object)
  commentId: M:Engine.Networking.Utility.ByteConverter.getBytes``1(System.Object)
  id: getBytes``1(System.Object)
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getBytes<T>(Object)
  nameWithType: ByteConverter.getBytes<T>(Object)
  fullName: Engine.Networking.Utility.ByteConverter.getBytes<T>(System.Object)
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getBytes
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 16
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns the bytes from a value type\n"
  example: []
  syntax:
    content: public static byte[] getBytes<T>(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object
    typeParameters:
    - id: T
      description: The type of object
    return:
      type: System.Byte[]
      description: ''
    content.vb: Public Shared Function getBytes(Of T)(o As Object) As Byte()
  overload: Engine.Networking.Utility.ByteConverter.getBytes*
  nameWithType.vb: ByteConverter.getBytes(Of T)(Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getBytes(Of T)(System.Object)
  name.vb: getBytes(Of T)(Object)
- uid: Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  commentId: M:Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  id: getString(System.Byte[])
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getString(Byte[])
  nameWithType: ByteConverter.getString(Byte[])
  fullName: Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getString
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 67
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns a string from a byte array\n"
  example: []
  syntax:
    content: public static string getString(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: The byte array
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function getString(bytes As Byte()) As String
  overload: Engine.Networking.Utility.ByteConverter.getString*
  nameWithType.vb: ByteConverter.getString(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getString(System.Byte())
  name.vb: getString(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  commentId: M:Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  id: getInt(System.Byte[])
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getInt(Byte[])
  nameWithType: ByteConverter.getInt(Byte[])
  fullName: Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getInt
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 77
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns an int from a byte array\n"
  example: []
  syntax:
    content: public static int getInt(byte[] b)
    parameters:
    - id: b
      type: System.Byte[]
      description: The byte array
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function getInt(b As Byte()) As Integer
  overload: Engine.Networking.Utility.ByteConverter.getInt*
  nameWithType.vb: ByteConverter.getInt(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getInt(System.Byte())
  name.vb: getInt(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  commentId: M:Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  id: getLong(System.Byte[])
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getLong(Byte[])
  nameWithType: ByteConverter.getLong(Byte[])
  fullName: Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getLong
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 87
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns a long from a byte array\n"
  example: []
  syntax:
    content: public static long getLong(byte[] b)
    parameters:
    - id: b
      type: System.Byte[]
      description: The byte array
    return:
      type: System.Int64
      description: ''
    content.vb: Public Shared Function getLong(b As Byte()) As Long
  overload: Engine.Networking.Utility.ByteConverter.getLong*
  nameWithType.vb: ByteConverter.getLong(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getLong(System.Byte())
  name.vb: getLong(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  commentId: M:Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  id: getShort(System.Byte[])
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getShort(Byte[])
  nameWithType: ByteConverter.getShort(Byte[])
  fullName: Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getShort
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 97
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns a short from a byte array\n"
  example: []
  syntax:
    content: public static short getShort(byte[] b)
    parameters:
    - id: b
      type: System.Byte[]
      description: The byte array
    return:
      type: System.Int16
      description: ''
    content.vb: Public Shared Function getShort(b As Byte()) As Short
  overload: Engine.Networking.Utility.ByteConverter.getShort*
  nameWithType.vb: ByteConverter.getShort(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getShort(System.Byte())
  name.vb: getShort(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  commentId: M:Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  id: getFloat(System.Byte[])
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getFloat(Byte[])
  nameWithType: ByteConverter.getFloat(Byte[])
  fullName: Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getFloat
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 107
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns a float from a byte array\n"
  example: []
  syntax:
    content: public static float getFloat(byte[] b)
    parameters:
    - id: b
      type: System.Byte[]
      description: The byte array
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function getFloat(b As Byte()) As Single
  overload: Engine.Networking.Utility.ByteConverter.getFloat*
  nameWithType.vb: ByteConverter.getFloat(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getFloat(System.Byte())
  name.vb: getFloat(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  commentId: M:Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  id: getBool(System.Byte[])
  parent: Engine.Networking.Utility.ByteConverter
  langs:
  - csharp
  - vb
  name: getBool(Byte[])
  nameWithType: ByteConverter.getBool(Byte[])
  fullName: Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  type: Method
  source:
    remote:
      path: Assets/Engine/Networking/Utilities/ByteConverter.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: getBool
    path: ../Assets/Engine/Networking/Utilities/ByteConverter.cs
    startLine: 117
  assemblies:
  - Engine.Networking
  namespace: Engine.Networking.Utility
  summary: "\nReturns a bool from a byte array\n"
  example: []
  syntax:
    content: public static bool getBool(byte[] b)
    parameters:
    - id: b
      type: System.Byte[]
      description: The byte array
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function getBool(b As Byte()) As Boolean
  overload: Engine.Networking.Utility.ByteConverter.getBool*
  nameWithType.vb: ByteConverter.getBool(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Engine.Networking.Utility.ByteConverter.getBool(System.Byte())
  name.vb: getBool(Byte())
references:
- uid: Engine.Networking.Utility
  commentId: N:Engine.Networking.Utility
  name: Engine.Networking.Utility
  nameWithType: Engine.Networking.Utility
  fullName: Engine.Networking.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Networking.Utility.ByteConverter.getBytes*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getBytes
  name: getBytes
  nameWithType: ByteConverter.getBytes
  fullName: Engine.Networking.Utility.ByteConverter.getBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Engine.Networking.Utility.ByteConverter.getString*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getString
  name: getString
  nameWithType: ByteConverter.getString
  fullName: Engine.Networking.Utility.ByteConverter.getString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Engine.Networking.Utility.ByteConverter.getInt*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getInt
  name: getInt
  nameWithType: ByteConverter.getInt
  fullName: Engine.Networking.Utility.ByteConverter.getInt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Engine.Networking.Utility.ByteConverter.getLong*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getLong
  name: getLong
  nameWithType: ByteConverter.getLong
  fullName: Engine.Networking.Utility.ByteConverter.getLong
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Engine.Networking.Utility.ByteConverter.getShort*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getShort
  name: getShort
  nameWithType: ByteConverter.getShort
  fullName: Engine.Networking.Utility.ByteConverter.getShort
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Engine.Networking.Utility.ByteConverter.getFloat*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getFloat
  name: getFloat
  nameWithType: ByteConverter.getFloat
  fullName: Engine.Networking.Utility.ByteConverter.getFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Engine.Networking.Utility.ByteConverter.getBool*
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getBool
  name: getBool
  nameWithType: ByteConverter.getBool
  fullName: Engine.Networking.Utility.ByteConverter.getBool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
