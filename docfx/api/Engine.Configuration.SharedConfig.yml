### YamlMime:ManagedReference
items:
- uid: Engine.Configuration.SharedConfig
  commentId: T:Engine.Configuration.SharedConfig
  id: SharedConfig
  parent: Engine.Configuration
  children:
  - Engine.Configuration.SharedConfig.CHUNK_LOAD_VIEW_DISTANCE
  - Engine.Configuration.SharedConfig.CHUNK_UNLOAD_VIEW_DISTANCE
  - Engine.Configuration.SharedConfig.DELIMITER
  - Engine.Configuration.SharedConfig.ESCAPE
  - Engine.Configuration.SharedConfig.LOGIN_SCENE_PATH
  - Engine.Configuration.SharedConfig.MAIN_SCENE_PATH
  - Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  - Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  - Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  - Engine.Configuration.SharedConfig.PORT
  - Engine.Configuration.SharedConfig.WORLD_CHUNK_SIZE
  - Engine.Configuration.SharedConfig.WORLD_SCENES_FOLDER
  langs:
  - csharp
  - vb
  name: SharedConfig
  nameWithType: SharedConfig
  fullName: Engine.Configuration.SharedConfig
  type: Class
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: SharedConfig
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 5
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nConstant values for both the client and server\n"
  example: []
  syntax:
    content: public class SharedConfig
    content.vb: Public Class SharedConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Configuration.SharedConfig.ESCAPE
  commentId: F:Engine.Configuration.SharedConfig.ESCAPE
  id: ESCAPE
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: ESCAPE
  nameWithType: SharedConfig.ESCAPE
  fullName: Engine.Configuration.SharedConfig.ESCAPE
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: ESCAPE
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 15
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nThe byte sequence to signify escaping the next byte\n"
  example: []
  syntax:
    content: public static readonly byte ESCAPE
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly ESCAPE As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.DELIMITER
  commentId: F:Engine.Configuration.SharedConfig.DELIMITER
  id: DELIMITER
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: DELIMITER
  nameWithType: SharedConfig.DELIMITER
  fullName: Engine.Configuration.SharedConfig.DELIMITER
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: DELIMITER
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 20
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nThe byte sequence to signify the end of a packet\n"
  example: []
  syntax:
    content: public static readonly byte DELIMITER
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly DELIMITER As Byte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.PORT
  commentId: F:Engine.Configuration.SharedConfig.PORT
  id: PORT
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: PORT
  nameWithType: SharedConfig.PORT
  fullName: Engine.Configuration.SharedConfig.PORT
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: PORT
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 25
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nThe server port\n"
  example: []
  syntax:
    content: public static readonly ushort PORT
    return:
      type: System.UInt16
    content.vb: Public Shared ReadOnly PORT As UShort
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  commentId: F:Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  id: MAX_BUFFER_SIZE
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: MAX_BUFFER_SIZE
  nameWithType: SharedConfig.MAX_BUFFER_SIZE
  fullName: Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: MAX_BUFFER_SIZE
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 30
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nMax size for the network buffer\n"
  example: []
  syntax:
    content: public static readonly int MAX_BUFFER_SIZE
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly MAX_BUFFER_SIZE As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  commentId: F:Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  id: MAX_USERNAME_LENGTH
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: MAX_USERNAME_LENGTH
  nameWithType: SharedConfig.MAX_USERNAME_LENGTH
  fullName: Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: MAX_USERNAME_LENGTH
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 39
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nMax length for usernames\n"
  example: []
  syntax:
    content: public static readonly int MAX_USERNAME_LENGTH
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly MAX_USERNAME_LENGTH As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  commentId: F:Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  id: MAX_PASSWORD_LENGTH
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: MAX_PASSWORD_LENGTH
  nameWithType: SharedConfig.MAX_PASSWORD_LENGTH
  fullName: Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: MAX_PASSWORD_LENGTH
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 44
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nMax length for passwords\n"
  example: []
  syntax:
    content: public static readonly int MAX_PASSWORD_LENGTH
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly MAX_PASSWORD_LENGTH As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.WORLD_CHUNK_SIZE
  commentId: F:Engine.Configuration.SharedConfig.WORLD_CHUNK_SIZE
  id: WORLD_CHUNK_SIZE
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: WORLD_CHUNK_SIZE
  nameWithType: SharedConfig.WORLD_CHUNK_SIZE
  fullName: Engine.Configuration.SharedConfig.WORLD_CHUNK_SIZE
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: WORLD_CHUNK_SIZE
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 53
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nThe size of the world chunks\n"
  example: []
  syntax:
    content: public static readonly int WORLD_CHUNK_SIZE
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly WORLD_CHUNK_SIZE As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.CHUNK_LOAD_VIEW_DISTANCE
  commentId: F:Engine.Configuration.SharedConfig.CHUNK_LOAD_VIEW_DISTANCE
  id: CHUNK_LOAD_VIEW_DISTANCE
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: CHUNK_LOAD_VIEW_DISTANCE
  nameWithType: SharedConfig.CHUNK_LOAD_VIEW_DISTANCE
  fullName: Engine.Configuration.SharedConfig.CHUNK_LOAD_VIEW_DISTANCE
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: CHUNK_LOAD_VIEW_DISTANCE
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 58
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nHow close to a chunk position you need to be for it to load\n"
  example: []
  syntax:
    content: public static readonly int CHUNK_LOAD_VIEW_DISTANCE
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly CHUNK_LOAD_VIEW_DISTANCE As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.CHUNK_UNLOAD_VIEW_DISTANCE
  commentId: F:Engine.Configuration.SharedConfig.CHUNK_UNLOAD_VIEW_DISTANCE
  id: CHUNK_UNLOAD_VIEW_DISTANCE
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: CHUNK_UNLOAD_VIEW_DISTANCE
  nameWithType: SharedConfig.CHUNK_UNLOAD_VIEW_DISTANCE
  fullName: Engine.Configuration.SharedConfig.CHUNK_UNLOAD_VIEW_DISTANCE
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: CHUNK_UNLOAD_VIEW_DISTANCE
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 63
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nHow far from a chunk position before it unloads\n"
  example: []
  syntax:
    content: public static readonly int CHUNK_UNLOAD_VIEW_DISTANCE
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly CHUNK_UNLOAD_VIEW_DISTANCE As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.MAIN_SCENE_PATH
  commentId: F:Engine.Configuration.SharedConfig.MAIN_SCENE_PATH
  id: MAIN_SCENE_PATH
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: MAIN_SCENE_PATH
  nameWithType: SharedConfig.MAIN_SCENE_PATH
  fullName: Engine.Configuration.SharedConfig.MAIN_SCENE_PATH
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: MAIN_SCENE_PATH
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 72
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nLocation of the main scene\n"
  example: []
  syntax:
    content: public static readonly string MAIN_SCENE_PATH
    return:
      type: System.String
    content.vb: Public Shared ReadOnly MAIN_SCENE_PATH As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.LOGIN_SCENE_PATH
  commentId: F:Engine.Configuration.SharedConfig.LOGIN_SCENE_PATH
  id: LOGIN_SCENE_PATH
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: LOGIN_SCENE_PATH
  nameWithType: SharedConfig.LOGIN_SCENE_PATH
  fullName: Engine.Configuration.SharedConfig.LOGIN_SCENE_PATH
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: LOGIN_SCENE_PATH
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 77
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nLocation of the login scene\n"
  example: []
  syntax:
    content: public static readonly string LOGIN_SCENE_PATH
    return:
      type: System.String
    content.vb: Public Shared ReadOnly LOGIN_SCENE_PATH As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Engine.Configuration.SharedConfig.WORLD_SCENES_FOLDER
  commentId: F:Engine.Configuration.SharedConfig.WORLD_SCENES_FOLDER
  id: WORLD_SCENES_FOLDER
  parent: Engine.Configuration.SharedConfig
  langs:
  - csharp
  - vb
  name: WORLD_SCENES_FOLDER
  nameWithType: SharedConfig.WORLD_SCENES_FOLDER
  fullName: Engine.Configuration.SharedConfig.WORLD_SCENES_FOLDER
  type: Field
  source:
    remote:
      path: Assets/Engine/Configuration/SharedConfig.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: WORLD_SCENES_FOLDER
    path: ../Assets/Engine/Configuration/SharedConfig.cs
    startLine: 82
  assemblies:
  - Engine.Configuration
  namespace: Engine.Configuration
  summary: "\nLocation of the world scenes\n"
  example: []
  syntax:
    content: public static readonly string WORLD_SCENES_FOLDER
    return:
      type: System.String
    content.vb: Public Shared ReadOnly WORLD_SCENES_FOLDER As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Engine.Configuration
  commentId: N:Engine.Configuration
  name: Engine.Configuration
  nameWithType: Engine.Configuration
  fullName: Engine.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
