### YamlMime:ManagedReference
items:
- uid: Engine.Factory.Manager
  commentId: T:Engine.Factory.Manager
  id: Manager
  parent: Engine.Factory
  children:
  - Engine.Factory.Manager.Init
  - Engine.Factory.Manager.LoadGameTask
  - Engine.Factory.Manager.Process
  - Engine.Factory.Manager.Shutdown
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: Manager
  fullName: Engine.Factory.Manager
  type: Class
  source:
    remote:
      path: Assets/Engine/Factory/Manager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Manager
    path: ../Assets/Engine/Factory/Manager.cs
    startLine: 7
  assemblies:
  - Engine.Factory
  namespace: Engine.Factory
  summary: "\nBase class for managers\n"
  example: []
  syntax:
    content: public abstract class Manager
    content.vb: Public MustInherit Class Manager
  inheritance:
  - System.Object
  derivedClasses:
  - Engine.Account.ClientLoginManager
  - Engine.Account.ServerLoginManager
  - Engine.API.APIManager
  - Engine.Asset.ClientAssetManager
  - Engine.Asset.SharedAssetManager
  - Engine.CameraSystem.ClientCameraManager
  - Engine.Dispatch.DispatchManager
  - Engine.Input.ClientInputManager
  - Engine.Logging.LogManager
  - Engine.Networking.ConnectionManager
  - Engine.Player.ClientPlayerManager
  - Engine.Player.ServerPlayerManager
  - Engine.UI.ClientUIManager
  - Engine.World.ClientWorldManager
  - Engine.World.ServerWorldManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Engine.Factory.Manager.Init
  commentId: M:Engine.Factory.Manager.Init
  id: Init
  parent: Engine.Factory.Manager
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: Manager.Init()
  fullName: Engine.Factory.Manager.Init()
  type: Method
  source:
    remote:
      path: Assets/Engine/Factory/Manager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Init
    path: ../Assets/Engine/Factory/Manager.cs
    startLine: 12
  assemblies:
  - Engine.Factory
  namespace: Engine.Factory
  summary: "\nCalled on initialization\n"
  example: []
  syntax:
    content: public abstract void Init()
    content.vb: Public MustOverride Sub Init
  overload: Engine.Factory.Manager.Init*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Engine.Factory.Manager.Process
  commentId: M:Engine.Factory.Manager.Process
  id: Process
  parent: Engine.Factory.Manager
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Manager.Process()
  fullName: Engine.Factory.Manager.Process()
  type: Method
  source:
    remote:
      path: Assets/Engine/Factory/Manager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Process
    path: ../Assets/Engine/Factory/Manager.cs
    startLine: 17
  assemblies:
  - Engine.Factory
  namespace: Engine.Factory
  summary: "\nCalled every frame\n"
  example: []
  syntax:
    content: public abstract void Process()
    content.vb: Public MustOverride Sub Process
  overload: Engine.Factory.Manager.Process*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Engine.Factory.Manager.Shutdown
  commentId: M:Engine.Factory.Manager.Shutdown
  id: Shutdown
  parent: Engine.Factory.Manager
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: Manager.Shutdown()
  fullName: Engine.Factory.Manager.Shutdown()
  type: Method
  source:
    remote:
      path: Assets/Engine/Factory/Manager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Shutdown
    path: ../Assets/Engine/Factory/Manager.cs
    startLine: 22
  assemblies:
  - Engine.Factory
  namespace: Engine.Factory
  summary: "\nCalled on shutdown\n"
  example: []
  syntax:
    content: public abstract void Shutdown()
    content.vb: Public MustOverride Sub Shutdown
  overload: Engine.Factory.Manager.Shutdown*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Engine.Factory.Manager.LoadGameTask
  commentId: M:Engine.Factory.Manager.LoadGameTask
  id: LoadGameTask
  parent: Engine.Factory.Manager
  langs:
  - csharp
  - vb
  name: LoadGameTask()
  nameWithType: Manager.LoadGameTask()
  fullName: Engine.Factory.Manager.LoadGameTask()
  type: Method
  source:
    remote:
      path: Assets/Engine/Factory/Manager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: LoadGameTask
    path: ../Assets/Engine/Factory/Manager.cs
    startLine: 27
  assemblies:
  - Engine.Factory
  namespace: Engine.Factory
  summary: "\nVirtual void that is called when the game is loaded.\n"
  example: []
  syntax:
    content: public virtual Task LoadGameTask()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function LoadGameTask As Task
  overload: Engine.Factory.Manager.LoadGameTask*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Engine.Factory
  commentId: N:Engine.Factory
  name: Engine.Factory
  nameWithType: Engine.Factory
  fullName: Engine.Factory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Factory.Manager.Init*
  commentId: Overload:Engine.Factory.Manager.Init
  name: Init
  nameWithType: Manager.Init
  fullName: Engine.Factory.Manager.Init
- uid: Engine.Factory.Manager.Process*
  commentId: Overload:Engine.Factory.Manager.Process
  name: Process
  nameWithType: Manager.Process
  fullName: Engine.Factory.Manager.Process
- uid: Engine.Factory.Manager.Shutdown*
  commentId: Overload:Engine.Factory.Manager.Shutdown
  name: Shutdown
  nameWithType: Manager.Shutdown
  fullName: Engine.Factory.Manager.Shutdown
- uid: Engine.Factory.Manager.LoadGameTask*
  commentId: Overload:Engine.Factory.Manager.LoadGameTask
  name: LoadGameTask
  nameWithType: Manager.LoadGameTask
  fullName: Engine.Factory.Manager.LoadGameTask
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
