### YamlMime:ManagedReference
items:
- uid: Engine.Account.ClientLoginManager
  commentId: T:Engine.Account.ClientLoginManager
  id: ClientLoginManager
  parent: Engine.Account
  children:
  - Engine.Account.ClientLoginManager.#ctor(Engine.Networking.ConnectionManager,System.Collections.Generic.List{Engine.Factory.Manager})
  - Engine.Account.ClientLoginManager.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  - Engine.Account.ClientLoginManager.Init
  - Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  - Engine.Account.ClientLoginManager.Process
  - Engine.Account.ClientLoginManager.Shutdown
  langs:
  - csharp
  - vb
  name: ClientLoginManager
  nameWithType: ClientLoginManager
  fullName: Engine.Account.ClientLoginManager
  type: Class
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: ClientLoginManager
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 15
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: "\nManager for handling client logins to the server\n"
  example: []
  syntax:
    content: 'public class ClientLoginManager : Manager'
    content.vb: >-
      Public Class ClientLoginManager
          Inherits Manager
  inheritance:
  - System.Object
  - Engine.Factory.Manager
  inheritedMembers:
  - Engine.Factory.Manager.LoadGameTask
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Engine.Account.ClientLoginManager.#ctor(Engine.Networking.ConnectionManager,System.Collections.Generic.List{Engine.Factory.Manager})
  commentId: M:Engine.Account.ClientLoginManager.#ctor(Engine.Networking.ConnectionManager,System.Collections.Generic.List{Engine.Factory.Manager})
  id: '#ctor(Engine.Networking.ConnectionManager,System.Collections.Generic.List{Engine.Factory.Manager})'
  parent: Engine.Account.ClientLoginManager
  langs:
  - csharp
  - vb
  name: ClientLoginManager(ConnectionManager, List<Manager>)
  nameWithType: ClientLoginManager.ClientLoginManager(ConnectionManager, List<Manager>)
  fullName: Engine.Account.ClientLoginManager.ClientLoginManager(Engine.Networking.ConnectionManager, System.Collections.Generic.List<Engine.Factory.Manager>)
  type: Constructor
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: .ctor
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 27
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ClientLoginManager(ConnectionManager connectionManager, List<Manager> managers)
    parameters:
    - id: connectionManager
      type: Engine.Networking.ConnectionManager
      description: The connection manager
    - id: managers
      type: System.Collections.Generic.List{Engine.Factory.Manager}
      description: All the managers
    content.vb: Public Sub New(connectionManager As ConnectionManager, managers As List(Of Manager))
  overload: Engine.Account.ClientLoginManager.#ctor*
  nameWithType.vb: ClientLoginManager.ClientLoginManager(ConnectionManager, List(Of Manager))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Account.ClientLoginManager.ClientLoginManager(Engine.Networking.ConnectionManager, System.Collections.Generic.List(Of Engine.Factory.Manager))
  name.vb: ClientLoginManager(ConnectionManager, List(Of Manager))
- uid: Engine.Account.ClientLoginManager.Init
  commentId: M:Engine.Account.ClientLoginManager.Init
  id: Init
  parent: Engine.Account.ClientLoginManager
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: ClientLoginManager.Init()
  fullName: Engine.Account.ClientLoginManager.Init()
  type: Method
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Init
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 40
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: "\nInitialize method\n"
  example: []
  syntax:
    content: public override void Init()
    content.vb: Public Overrides Sub Init
  overridden: Engine.Factory.Manager.Init
  overload: Engine.Account.ClientLoginManager.Init*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Account.ClientLoginManager.Shutdown
  commentId: M:Engine.Account.ClientLoginManager.Shutdown
  id: Shutdown
  parent: Engine.Account.ClientLoginManager
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: ClientLoginManager.Shutdown()
  fullName: Engine.Account.ClientLoginManager.Shutdown()
  type: Method
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Shutdown
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 55
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: "\nCalled on program shutdown\n"
  example: []
  syntax:
    content: public override void Shutdown()
    content.vb: Public Overrides Sub Shutdown
  overridden: Engine.Factory.Manager.Shutdown
  overload: Engine.Account.ClientLoginManager.Shutdown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Account.ClientLoginManager.Process
  commentId: M:Engine.Account.ClientLoginManager.Process
  id: Process
  parent: Engine.Account.ClientLoginManager
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: ClientLoginManager.Process()
  fullName: Engine.Account.ClientLoginManager.Process()
  type: Method
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: Process
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 63
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: "\nCalled every frame\n"
  example: []
  syntax:
    content: public override void Process()
    content.vb: Public Overrides Sub Process
  overridden: Engine.Factory.Manager.Process
  overload: Engine.Account.ClientLoginManager.Process*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Engine.Account.ClientLoginManager.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  commentId: M:Engine.Account.ClientLoginManager.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  id: AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  parent: Engine.Account.ClientLoginManager
  langs:
  - csharp
  - vb
  name: AttemptLogin(String, String, Boolean, Action<Boolean, Color, String>, Action<Single>)
  nameWithType: ClientLoginManager.AttemptLogin(String, String, Boolean, Action<Boolean, Color, String>, Action<Single>)
  fullName: Engine.Account.ClientLoginManager.AttemptLogin(System.String, System.String, System.Boolean, System.Action<System.Boolean, UnityEngine.Color, System.String>, System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: AttemptLogin
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 80
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: Call when the login button pressed.
  example: []
  syntax:
    content: public void AttemptLogin(string email, string password, bool rememberMe, Action<bool, Color, string> statusMessageAction, Action<float> opacityAction)
    parameters:
    - id: email
      type: System.String
      description: The email.
    - id: password
      type: System.String
      description: The password.
    - id: rememberMe
      type: System.Boolean
      description: if set to <code>true</code> [remember me].
    - id: statusMessageAction
      type: System.Action{System.Boolean,UnityEngine.Color,System.String}
      description: The action called to update the status message.
    - id: opacityAction
      type: System.Action{System.Single}
      description: The action called to update the panel opacity.
    content.vb: Public Sub AttemptLogin(email As String, password As String, rememberMe As Boolean, statusMessageAction As Action(Of Boolean, Color, String), opacityAction As Action(Of Single))
  overload: Engine.Account.ClientLoginManager.AttemptLogin*
  nameWithType.vb: ClientLoginManager.AttemptLogin(String, String, Boolean, Action(Of Boolean, Color, String), Action(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Engine.Account.ClientLoginManager.AttemptLogin(System.String, System.String, System.Boolean, System.Action(Of System.Boolean, UnityEngine.Color, System.String), System.Action(Of System.Single))
  name.vb: AttemptLogin(String, String, Boolean, Action(Of Boolean, Color, String), Action(Of Single))
- uid: Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  commentId: M:Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  id: IsPlayerLoggedIn
  parent: Engine.Account.ClientLoginManager
  langs:
  - csharp
  - vb
  name: IsPlayerLoggedIn()
  nameWithType: ClientLoginManager.IsPlayerLoggedIn()
  fullName: Engine.Account.ClientLoginManager.IsPlayerLoggedIn()
  type: Method
  source:
    remote:
      path: Assets/Engine/Account/ClientLoginManager.cs
      branch: master
      repo: https://github.com/AustinGarrettR/Elavad
    id: IsPlayerLoggedIn
    path: ../Assets/Engine/Account/ClientLoginManager.cs
    startLine: 293
  assemblies:
  - Engine.Account
  namespace: Engine.Account
  summary: "\nReturns if player is logged in\n"
  example: []
  syntax:
    content: public bool IsPlayerLoggedIn()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsPlayerLoggedIn As Boolean
  overload: Engine.Account.ClientLoginManager.IsPlayerLoggedIn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Engine.Account
  commentId: N:Engine.Account
  name: Engine.Account
  nameWithType: Engine.Account
  fullName: Engine.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Engine.Factory.Manager
  commentId: T:Engine.Factory.Manager
  parent: Engine.Factory
  name: Manager
  nameWithType: Manager
  fullName: Engine.Factory.Manager
- uid: Engine.Factory.Manager.LoadGameTask
  commentId: M:Engine.Factory.Manager.LoadGameTask
  parent: Engine.Factory.Manager
  name: LoadGameTask()
  nameWithType: Manager.LoadGameTask()
  fullName: Engine.Factory.Manager.LoadGameTask()
  spec.csharp:
  - uid: Engine.Factory.Manager.LoadGameTask
    name: LoadGameTask
    nameWithType: Manager.LoadGameTask
    fullName: Engine.Factory.Manager.LoadGameTask
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.LoadGameTask
    name: LoadGameTask
    nameWithType: Manager.LoadGameTask
    fullName: Engine.Factory.Manager.LoadGameTask
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Engine.Factory
  commentId: N:Engine.Factory
  name: Engine.Factory
  nameWithType: Engine.Factory
  fullName: Engine.Factory
- uid: Engine.Account.ClientLoginManager.#ctor*
  commentId: Overload:Engine.Account.ClientLoginManager.#ctor
  name: ClientLoginManager
  nameWithType: ClientLoginManager.ClientLoginManager
  fullName: Engine.Account.ClientLoginManager.ClientLoginManager
- uid: Engine.Networking.ConnectionManager
  commentId: T:Engine.Networking.ConnectionManager
  parent: Engine.Networking
  name: ConnectionManager
  nameWithType: ConnectionManager
  fullName: Engine.Networking.ConnectionManager
- uid: System.Collections.Generic.List{Engine.Factory.Manager}
  commentId: T:System.Collections.Generic.List{Engine.Factory.Manager}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Manager>
  nameWithType: List<Manager>
  fullName: System.Collections.Generic.List<Engine.Factory.Manager>
  nameWithType.vb: List(Of Manager)
  fullName.vb: System.Collections.Generic.List(Of Engine.Factory.Manager)
  name.vb: List(Of Manager)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Engine.Factory.Manager
    name: Manager
    nameWithType: Manager
    fullName: Engine.Factory.Manager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Engine.Factory.Manager
    name: Manager
    nameWithType: Manager
    fullName: Engine.Factory.Manager
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Networking
  commentId: N:Engine.Networking
  name: Engine.Networking
  nameWithType: Engine.Networking
  fullName: Engine.Networking
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Engine.Factory.Manager.Init
  commentId: M:Engine.Factory.Manager.Init
  parent: Engine.Factory.Manager
  name: Init()
  nameWithType: Manager.Init()
  fullName: Engine.Factory.Manager.Init()
  spec.csharp:
  - uid: Engine.Factory.Manager.Init
    name: Init
    nameWithType: Manager.Init
    fullName: Engine.Factory.Manager.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.Init
    name: Init
    nameWithType: Manager.Init
    fullName: Engine.Factory.Manager.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Account.ClientLoginManager.Init*
  commentId: Overload:Engine.Account.ClientLoginManager.Init
  name: Init
  nameWithType: ClientLoginManager.Init
  fullName: Engine.Account.ClientLoginManager.Init
- uid: Engine.Factory.Manager.Shutdown
  commentId: M:Engine.Factory.Manager.Shutdown
  parent: Engine.Factory.Manager
  name: Shutdown()
  nameWithType: Manager.Shutdown()
  fullName: Engine.Factory.Manager.Shutdown()
  spec.csharp:
  - uid: Engine.Factory.Manager.Shutdown
    name: Shutdown
    nameWithType: Manager.Shutdown
    fullName: Engine.Factory.Manager.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.Shutdown
    name: Shutdown
    nameWithType: Manager.Shutdown
    fullName: Engine.Factory.Manager.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Account.ClientLoginManager.Shutdown*
  commentId: Overload:Engine.Account.ClientLoginManager.Shutdown
  name: Shutdown
  nameWithType: ClientLoginManager.Shutdown
  fullName: Engine.Account.ClientLoginManager.Shutdown
- uid: Engine.Factory.Manager.Process
  commentId: M:Engine.Factory.Manager.Process
  parent: Engine.Factory.Manager
  name: Process()
  nameWithType: Manager.Process()
  fullName: Engine.Factory.Manager.Process()
  spec.csharp:
  - uid: Engine.Factory.Manager.Process
    name: Process
    nameWithType: Manager.Process
    fullName: Engine.Factory.Manager.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Engine.Factory.Manager.Process
    name: Process
    nameWithType: Manager.Process
    fullName: Engine.Factory.Manager.Process
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Account.ClientLoginManager.Process*
  commentId: Overload:Engine.Account.ClientLoginManager.Process
  name: Process
  nameWithType: ClientLoginManager.Process
  fullName: Engine.Account.ClientLoginManager.Process
- uid: Engine.Account.ClientLoginManager.AttemptLogin*
  commentId: Overload:Engine.Account.ClientLoginManager.AttemptLogin
  name: AttemptLogin
  nameWithType: ClientLoginManager.AttemptLogin
  fullName: Engine.Account.ClientLoginManager.AttemptLogin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action{System.Boolean,UnityEngine.Color,System.String}
  commentId: T:System.Action{System.Boolean,UnityEngine.Color,System.String}
  parent: System
  definition: System.Action`3
  name: Action<Boolean, Color, String>
  nameWithType: Action<Boolean, Color, String>
  fullName: System.Action<System.Boolean, UnityEngine.Color, System.String>
  nameWithType.vb: Action(Of Boolean, Color, String)
  fullName.vb: System.Action(Of System.Boolean, UnityEngine.Color, System.String)
  name.vb: Action(Of Boolean, Color, String)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  name: Action<Single>
  nameWithType: Action<Single>
  fullName: System.Action<System.Single>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of System.Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Engine.Account.ClientLoginManager.IsPlayerLoggedIn*
  commentId: Overload:Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  name: IsPlayerLoggedIn
  nameWithType: ClientLoginManager.IsPlayerLoggedIn
  fullName: Engine.Account.ClientLoginManager.IsPlayerLoggedIn
