### YamlMime:XRefMap
sorted: true
references:
- uid: Content
  name: Content
  href: api/Content.yml
  commentId: N:Content
  fullName: Content
  nameWithType: Content
- uid: Content.ClientContentHandler
  name: ClientContentHandler
  href: api/Content.ClientContentHandler.yml
  commentId: T:Content.ClientContentHandler
  fullName: Content.ClientContentHandler
  nameWithType: ClientContentHandler
- uid: Content.ClientContentHandler.#ctor
  name: ClientContentHandler()
  href: api/Content.ClientContentHandler.yml
  commentId: M:Content.ClientContentHandler.#ctor
  fullName: Content.ClientContentHandler.ClientContentHandler()
  nameWithType: ClientContentHandler.ClientContentHandler()
- uid: Content.ClientContentHandler.#ctor*
  name: ClientContentHandler
  href: api/Content.ClientContentHandler.yml
  commentId: Overload:Content.ClientContentHandler.#ctor
  isSpec: "True"
  fullName: Content.ClientContentHandler.ClientContentHandler
  nameWithType: ClientContentHandler.ClientContentHandler
- uid: Content.ServerContentHandler
  name: ServerContentHandler
  href: api/Content.ServerContentHandler.yml
  commentId: T:Content.ServerContentHandler
  fullName: Content.ServerContentHandler
  nameWithType: ServerContentHandler
- uid: Content.ServerContentHandler.#ctor
  name: ServerContentHandler()
  href: api/Content.ServerContentHandler.yml
  commentId: M:Content.ServerContentHandler.#ctor
  fullName: Content.ServerContentHandler.ServerContentHandler()
  nameWithType: ServerContentHandler.ServerContentHandler()
- uid: Content.ServerContentHandler.#ctor*
  name: ServerContentHandler
  href: api/Content.ServerContentHandler.yml
  commentId: Overload:Content.ServerContentHandler.#ctor
  isSpec: "True"
  fullName: Content.ServerContentHandler.ServerContentHandler
  nameWithType: ServerContentHandler.ServerContentHandler
- uid: Content.UI
  name: Content.UI
  href: api/Content.UI.yml
  commentId: N:Content.UI
  fullName: Content.UI
  nameWithType: Content.UI
- uid: Content.UI.Login_Screen_UIController
  name: Login_Screen_UIController
  href: api/Content.UI.Login_Screen_UIController.yml
  commentId: T:Content.UI.Login_Screen_UIController
  fullName: Content.UI.Login_Screen_UIController
  nameWithType: Login_Screen_UIController
- uid: Content.UI.Login_Screen_UIController.onPanelLoaded
  name: onPanelLoaded()
  href: api/Content.UI.Login_Screen_UIController.yml
  commentId: M:Content.UI.Login_Screen_UIController.onPanelLoaded
  fullName: Content.UI.Login_Screen_UIController.onPanelLoaded()
  nameWithType: Login_Screen_UIController.onPanelLoaded()
- uid: Content.UI.Login_Screen_UIController.onPanelLoaded*
  name: onPanelLoaded
  href: api/Content.UI.Login_Screen_UIController.yml
  commentId: Overload:Content.UI.Login_Screen_UIController.onPanelLoaded
  isSpec: "True"
  fullName: Content.UI.Login_Screen_UIController.onPanelLoaded
  nameWithType: Login_Screen_UIController.onPanelLoaded
- uid: Editor
  name: Editor
  href: api/Editor.yml
  commentId: N:Editor
  fullName: Editor
  nameWithType: Editor
- uid: Editor.PacketInfoEditor
  name: PacketInfoEditor
  href: api/Editor.PacketInfoEditor.yml
  commentId: T:Editor.PacketInfoEditor
  fullName: Editor.PacketInfoEditor
  nameWithType: PacketInfoEditor
- uid: Editor.PacketInfoEditor.ShowWindow
  name: ShowWindow()
  href: api/Editor.PacketInfoEditor.yml
  commentId: M:Editor.PacketInfoEditor.ShowWindow
  fullName: Editor.PacketInfoEditor.ShowWindow()
  nameWithType: PacketInfoEditor.ShowWindow()
- uid: Editor.PacketInfoEditor.ShowWindow*
  name: ShowWindow
  href: api/Editor.PacketInfoEditor.yml
  commentId: Overload:Editor.PacketInfoEditor.ShowWindow
  isSpec: "True"
  fullName: Editor.PacketInfoEditor.ShowWindow
  nameWithType: PacketInfoEditor.ShowWindow
- uid: Engine
  name: Engine
  href: api/Engine.yml
  commentId: N:Engine
  fullName: Engine
  nameWithType: Engine
- uid: Engine.Account
  name: Engine.Account
  href: api/Engine.Account.yml
  commentId: N:Engine.Account
  fullName: Engine.Account
  nameWithType: Engine.Account
- uid: Engine.Account.ClientLoginManager
  name: ClientLoginManager
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: T:Engine.Account.ClientLoginManager
  fullName: Engine.Account.ClientLoginManager
  nameWithType: ClientLoginManager
- uid: Engine.Account.ClientLoginManager.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  name: AttemptLogin(String, String, Boolean, Action<Boolean, Color, String>, Action<Single>)
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: M:Engine.Account.ClientLoginManager.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  name.vb: AttemptLogin(String, String, Boolean, Action(Of Boolean, Color, String), Action(Of Single))
  fullName: Engine.Account.ClientLoginManager.AttemptLogin(System.String, System.String, System.Boolean, System.Action<System.Boolean, UnityEngine.Color, System.String>, System.Action<System.Single>)
  fullName.vb: Engine.Account.ClientLoginManager.AttemptLogin(System.String, System.String, System.Boolean, System.Action(Of System.Boolean, UnityEngine.Color, System.String), System.Action(Of System.Single))
  nameWithType: ClientLoginManager.AttemptLogin(String, String, Boolean, Action<Boolean, Color, String>, Action<Single>)
  nameWithType.vb: ClientLoginManager.AttemptLogin(String, String, Boolean, Action(Of Boolean, Color, String), Action(Of Single))
- uid: Engine.Account.ClientLoginManager.AttemptLogin*
  name: AttemptLogin
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: Overload:Engine.Account.ClientLoginManager.AttemptLogin
  isSpec: "True"
  fullName: Engine.Account.ClientLoginManager.AttemptLogin
  nameWithType: ClientLoginManager.AttemptLogin
- uid: Engine.Account.ClientLoginManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: M:Engine.Account.ClientLoginManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Account.ClientLoginManager.init(System.Object[])
  fullName.vb: Engine.Account.ClientLoginManager.init(System.Object())
  nameWithType: ClientLoginManager.init(Object[])
  nameWithType.vb: ClientLoginManager.init(Object())
- uid: Engine.Account.ClientLoginManager.init*
  name: init
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: Overload:Engine.Account.ClientLoginManager.init
  isSpec: "True"
  fullName: Engine.Account.ClientLoginManager.init
  nameWithType: ClientLoginManager.init
- uid: Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  name: IsPlayerLoggedIn()
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: M:Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  fullName: Engine.Account.ClientLoginManager.IsPlayerLoggedIn()
  nameWithType: ClientLoginManager.IsPlayerLoggedIn()
- uid: Engine.Account.ClientLoginManager.IsPlayerLoggedIn*
  name: IsPlayerLoggedIn
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: Overload:Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  isSpec: "True"
  fullName: Engine.Account.ClientLoginManager.IsPlayerLoggedIn
  nameWithType: ClientLoginManager.IsPlayerLoggedIn
- uid: Engine.Account.ClientLoginManager.shutdown
  name: shutdown()
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: M:Engine.Account.ClientLoginManager.shutdown
  fullName: Engine.Account.ClientLoginManager.shutdown()
  nameWithType: ClientLoginManager.shutdown()
- uid: Engine.Account.ClientLoginManager.shutdown*
  name: shutdown
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: Overload:Engine.Account.ClientLoginManager.shutdown
  isSpec: "True"
  fullName: Engine.Account.ClientLoginManager.shutdown
  nameWithType: ClientLoginManager.shutdown
- uid: Engine.Account.ClientLoginManager.update
  name: update()
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: M:Engine.Account.ClientLoginManager.update
  fullName: Engine.Account.ClientLoginManager.update()
  nameWithType: ClientLoginManager.update()
- uid: Engine.Account.ClientLoginManager.update*
  name: update
  href: api/Engine.Account.ClientLoginManager.yml
  commentId: Overload:Engine.Account.ClientLoginManager.update
  isSpec: "True"
  fullName: Engine.Account.ClientLoginManager.update
  nameWithType: ClientLoginManager.update
- uid: Engine.Account.ServerLoginManager
  name: ServerLoginManager
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: T:Engine.Account.ServerLoginManager
  fullName: Engine.Account.ServerLoginManager
  nameWithType: ServerLoginManager
- uid: Engine.Account.ServerLoginManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: M:Engine.Account.ServerLoginManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Account.ServerLoginManager.init(System.Object[])
  fullName.vb: Engine.Account.ServerLoginManager.init(System.Object())
  nameWithType: ServerLoginManager.init(Object[])
  nameWithType.vb: ServerLoginManager.init(Object())
- uid: Engine.Account.ServerLoginManager.init*
  name: init
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: Overload:Engine.Account.ServerLoginManager.init
  isSpec: "True"
  fullName: Engine.Account.ServerLoginManager.init
  nameWithType: ServerLoginManager.init
- uid: Engine.Account.ServerLoginManager.shutdown
  name: shutdown()
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: M:Engine.Account.ServerLoginManager.shutdown
  fullName: Engine.Account.ServerLoginManager.shutdown()
  nameWithType: ServerLoginManager.shutdown()
- uid: Engine.Account.ServerLoginManager.shutdown*
  name: shutdown
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: Overload:Engine.Account.ServerLoginManager.shutdown
  isSpec: "True"
  fullName: Engine.Account.ServerLoginManager.shutdown
  nameWithType: ServerLoginManager.shutdown
- uid: Engine.Account.ServerLoginManager.update
  name: update()
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: M:Engine.Account.ServerLoginManager.update
  fullName: Engine.Account.ServerLoginManager.update()
  nameWithType: ServerLoginManager.update()
- uid: Engine.Account.ServerLoginManager.update*
  name: update
  href: api/Engine.Account.ServerLoginManager.yml
  commentId: Overload:Engine.Account.ServerLoginManager.update
  isSpec: "True"
  fullName: Engine.Account.ServerLoginManager.update
  nameWithType: ServerLoginManager.update
- uid: Engine.API
  name: Engine.API
  href: api/Engine.API.yml
  commentId: N:Engine.API
  fullName: Engine.API
  nameWithType: Engine.API
- uid: Engine.API.API
  name: API
  href: api/Engine.API.API.yml
  commentId: T:Engine.API.API
  fullName: Engine.API.API
  nameWithType: API
- uid: Engine.API.API.Client
  name: API.Client
  href: api/Engine.API.API.Client.yml
  commentId: T:Engine.API.API.Client
  fullName: Engine.API.API.Client
  nameWithType: API.Client
- uid: Engine.API.API.Client.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  name: AttemptLogin(String, String, Boolean, Action<Boolean, Color, String>, Action<Single>)
  href: api/Engine.API.API.Client.yml
  commentId: M:Engine.API.API.Client.AttemptLogin(System.String,System.String,System.Boolean,System.Action{System.Boolean,UnityEngine.Color,System.String},System.Action{System.Single})
  name.vb: AttemptLogin(String, String, Boolean, Action(Of Boolean, Color, String), Action(Of Single))
  fullName: Engine.API.API.Client.AttemptLogin(System.String, System.String, System.Boolean, System.Action<System.Boolean, UnityEngine.Color, System.String>, System.Action<System.Single>)
  fullName.vb: Engine.API.API.Client.AttemptLogin(System.String, System.String, System.Boolean, System.Action(Of System.Boolean, UnityEngine.Color, System.String), System.Action(Of System.Single))
  nameWithType: API.Client.AttemptLogin(String, String, Boolean, Action<Boolean, Color, String>, Action<Single>)
  nameWithType.vb: API.Client.AttemptLogin(String, String, Boolean, Action(Of Boolean, Color, String), Action(Of Single))
- uid: Engine.API.API.Client.AttemptLogin*
  name: AttemptLogin
  href: api/Engine.API.API.Client.yml
  commentId: Overload:Engine.API.API.Client.AttemptLogin
  isSpec: "True"
  fullName: Engine.API.API.Client.AttemptLogin
  nameWithType: API.Client.AttemptLogin
- uid: Engine.API.API.Server
  name: API.Server
  href: api/Engine.API.API.Server.yml
  commentId: T:Engine.API.API.Server
  fullName: Engine.API.API.Server
  nameWithType: API.Server
- uid: Engine.API.APIManager
  name: APIManager
  href: api/Engine.API.APIManager.yml
  commentId: T:Engine.API.APIManager
  fullName: Engine.API.APIManager
  nameWithType: APIManager
- uid: Engine.API.APIManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.API.APIManager.yml
  commentId: M:Engine.API.APIManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.API.APIManager.init(System.Object[])
  fullName.vb: Engine.API.APIManager.init(System.Object())
  nameWithType: APIManager.init(Object[])
  nameWithType.vb: APIManager.init(Object())
- uid: Engine.API.APIManager.init*
  name: init
  href: api/Engine.API.APIManager.yml
  commentId: Overload:Engine.API.APIManager.init
  isSpec: "True"
  fullName: Engine.API.APIManager.init
  nameWithType: APIManager.init
- uid: Engine.API.APIManager.shutdown
  name: shutdown()
  href: api/Engine.API.APIManager.yml
  commentId: M:Engine.API.APIManager.shutdown
  fullName: Engine.API.APIManager.shutdown()
  nameWithType: APIManager.shutdown()
- uid: Engine.API.APIManager.shutdown*
  name: shutdown
  href: api/Engine.API.APIManager.yml
  commentId: Overload:Engine.API.APIManager.shutdown
  isSpec: "True"
  fullName: Engine.API.APIManager.shutdown
  nameWithType: APIManager.shutdown
- uid: Engine.API.APIManager.update
  name: update()
  href: api/Engine.API.APIManager.yml
  commentId: M:Engine.API.APIManager.update
  fullName: Engine.API.APIManager.update()
  nameWithType: APIManager.update()
- uid: Engine.API.APIManager.update*
  name: update
  href: api/Engine.API.APIManager.yml
  commentId: Overload:Engine.API.APIManager.update
  isSpec: "True"
  fullName: Engine.API.APIManager.update
  nameWithType: APIManager.update
- uid: Engine.Asset
  name: Engine.Asset
  href: api/Engine.Asset.yml
  commentId: N:Engine.Asset
  fullName: Engine.Asset
  nameWithType: Engine.Asset
- uid: Engine.Asset.ClientAssetManager
  name: ClientAssetManager
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: T:Engine.Asset.ClientAssetManager
  fullName: Engine.Asset.ClientAssetManager
  nameWithType: ClientAssetManager
- uid: Engine.Asset.ClientAssetManager.GetUIPanel(System.String)
  name: GetUIPanel(String)
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: M:Engine.Asset.ClientAssetManager.GetUIPanel(System.String)
  fullName: Engine.Asset.ClientAssetManager.GetUIPanel(System.String)
  nameWithType: ClientAssetManager.GetUIPanel(String)
- uid: Engine.Asset.ClientAssetManager.GetUIPanel*
  name: GetUIPanel
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: Overload:Engine.Asset.ClientAssetManager.GetUIPanel
  isSpec: "True"
  fullName: Engine.Asset.ClientAssetManager.GetUIPanel
  nameWithType: ClientAssetManager.GetUIPanel
- uid: Engine.Asset.ClientAssetManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: M:Engine.Asset.ClientAssetManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Asset.ClientAssetManager.init(System.Object[])
  fullName.vb: Engine.Asset.ClientAssetManager.init(System.Object())
  nameWithType: ClientAssetManager.init(Object[])
  nameWithType.vb: ClientAssetManager.init(Object())
- uid: Engine.Asset.ClientAssetManager.init*
  name: init
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: Overload:Engine.Asset.ClientAssetManager.init
  isSpec: "True"
  fullName: Engine.Asset.ClientAssetManager.init
  nameWithType: ClientAssetManager.init
- uid: Engine.Asset.ClientAssetManager.shutdown
  name: shutdown()
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: M:Engine.Asset.ClientAssetManager.shutdown
  fullName: Engine.Asset.ClientAssetManager.shutdown()
  nameWithType: ClientAssetManager.shutdown()
- uid: Engine.Asset.ClientAssetManager.shutdown*
  name: shutdown
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: Overload:Engine.Asset.ClientAssetManager.shutdown
  isSpec: "True"
  fullName: Engine.Asset.ClientAssetManager.shutdown
  nameWithType: ClientAssetManager.shutdown
- uid: Engine.Asset.ClientAssetManager.update
  name: update()
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: M:Engine.Asset.ClientAssetManager.update
  fullName: Engine.Asset.ClientAssetManager.update()
  nameWithType: ClientAssetManager.update()
- uid: Engine.Asset.ClientAssetManager.update*
  name: update
  href: api/Engine.Asset.ClientAssetManager.yml
  commentId: Overload:Engine.Asset.ClientAssetManager.update
  isSpec: "True"
  fullName: Engine.Asset.ClientAssetManager.update
  nameWithType: ClientAssetManager.update
- uid: Engine.Asset.ClientAssetPack
  name: ClientAssetPack
  href: api/Engine.Asset.ClientAssetPack.yml
  commentId: T:Engine.Asset.ClientAssetPack
  fullName: Engine.Asset.ClientAssetPack
  nameWithType: ClientAssetPack
- uid: Engine.Asset.ClientAssetPack.uiPack
  name: uiPack
  href: api/Engine.Asset.ClientAssetPack.yml
  commentId: F:Engine.Asset.ClientAssetPack.uiPack
  fullName: Engine.Asset.ClientAssetPack.uiPack
  nameWithType: ClientAssetPack.uiPack
- uid: Engine.Asset.UI_Pack
  name: UI_Pack
  href: api/Engine.Asset.UI_Pack.yml
  commentId: T:Engine.Asset.UI_Pack
  fullName: Engine.Asset.UI_Pack
  nameWithType: UI_Pack
- uid: Engine.Asset.UI_Pack.UI_Panels
  name: UI_Panels
  href: api/Engine.Asset.UI_Pack.yml
  commentId: F:Engine.Asset.UI_Pack.UI_Panels
  fullName: Engine.Asset.UI_Pack.UI_Panels
  nameWithType: UI_Pack.UI_Panels
- uid: Engine.ClientCore
  name: ClientCore
  href: api/Engine.ClientCore.yml
  commentId: T:Engine.ClientCore
  fullName: Engine.ClientCore
  nameWithType: ClientCore
- uid: Engine.ClientCore.apiManager
  name: apiManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.apiManager
  fullName: Engine.ClientCore.apiManager
  nameWithType: ClientCore.apiManager
- uid: Engine.ClientCore.clientAssetManager
  name: clientAssetManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.clientAssetManager
  fullName: Engine.ClientCore.clientAssetManager
  nameWithType: ClientCore.clientAssetManager
- uid: Engine.ClientCore.clientInputManager
  name: clientInputManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.clientInputManager
  fullName: Engine.ClientCore.clientInputManager
  nameWithType: ClientCore.clientInputManager
- uid: Engine.ClientCore.clientLoginManager
  name: clientLoginManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.clientLoginManager
  fullName: Engine.ClientCore.clientLoginManager
  nameWithType: ClientCore.clientLoginManager
- uid: Engine.ClientCore.clientUIManager
  name: clientUIManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.clientUIManager
  fullName: Engine.ClientCore.clientUIManager
  nameWithType: ClientCore.clientUIManager
- uid: Engine.ClientCore.connectionManager
  name: connectionManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.connectionManager
  fullName: Engine.ClientCore.connectionManager
  nameWithType: ClientCore.connectionManager
- uid: Engine.ClientCore.dispatchManager
  name: dispatchManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.dispatchManager
  fullName: Engine.ClientCore.dispatchManager
  nameWithType: ClientCore.dispatchManager
- uid: Engine.ClientCore.logManager
  name: logManager
  href: api/Engine.ClientCore.yml
  commentId: F:Engine.ClientCore.logManager
  fullName: Engine.ClientCore.logManager
  nameWithType: ClientCore.logManager
- uid: Engine.Configuration
  name: Engine.Configuration
  href: api/Engine.Configuration.yml
  commentId: N:Engine.Configuration
  fullName: Engine.Configuration
  nameWithType: Engine.Configuration
- uid: Engine.Configuration.ClientConfig
  name: ClientConfig
  href: api/Engine.Configuration.ClientConfig.yml
  commentId: T:Engine.Configuration.ClientConfig
  fullName: Engine.Configuration.ClientConfig
  nameWithType: ClientConfig
- uid: Engine.Configuration.ServerConfig
  name: ServerConfig
  href: api/Engine.Configuration.ServerConfig.yml
  commentId: T:Engine.Configuration.ServerConfig
  fullName: Engine.Configuration.ServerConfig
  nameWithType: ServerConfig
- uid: Engine.Configuration.SharedConfig
  name: SharedConfig
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: T:Engine.Configuration.SharedConfig
  fullName: Engine.Configuration.SharedConfig
  nameWithType: SharedConfig
- uid: Engine.Configuration.SharedConfig.DELIMITER
  name: DELIMITER
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: F:Engine.Configuration.SharedConfig.DELIMITER
  fullName: Engine.Configuration.SharedConfig.DELIMITER
  nameWithType: SharedConfig.DELIMITER
- uid: Engine.Configuration.SharedConfig.ESCAPE
  name: ESCAPE
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: F:Engine.Configuration.SharedConfig.ESCAPE
  fullName: Engine.Configuration.SharedConfig.ESCAPE
  nameWithType: SharedConfig.ESCAPE
- uid: Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  name: MAX_BUFFER_SIZE
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: F:Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  fullName: Engine.Configuration.SharedConfig.MAX_BUFFER_SIZE
  nameWithType: SharedConfig.MAX_BUFFER_SIZE
- uid: Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  name: MAX_PASSWORD_LENGTH
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: F:Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  fullName: Engine.Configuration.SharedConfig.MAX_PASSWORD_LENGTH
  nameWithType: SharedConfig.MAX_PASSWORD_LENGTH
- uid: Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  name: MAX_USERNAME_LENGTH
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: F:Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  fullName: Engine.Configuration.SharedConfig.MAX_USERNAME_LENGTH
  nameWithType: SharedConfig.MAX_USERNAME_LENGTH
- uid: Engine.Configuration.SharedConfig.PORT
  name: PORT
  href: api/Engine.Configuration.SharedConfig.yml
  commentId: F:Engine.Configuration.SharedConfig.PORT
  fullName: Engine.Configuration.SharedConfig.PORT
  nameWithType: SharedConfig.PORT
- uid: Engine.Dispatch
  name: Engine.Dispatch
  href: api/Engine.Dispatch.yml
  commentId: N:Engine.Dispatch
  fullName: Engine.Dispatch
  nameWithType: Engine.Dispatch
- uid: Engine.Dispatch.Dispatcher
  name: Dispatcher
  href: api/Engine.Dispatch.Dispatcher.yml
  commentId: T:Engine.Dispatch.Dispatcher
  fullName: Engine.Dispatch.Dispatcher
  nameWithType: Dispatcher
- uid: Engine.Dispatch.Dispatcher.Invoke(System.Action)
  name: Invoke(Action)
  href: api/Engine.Dispatch.Dispatcher.yml
  commentId: M:Engine.Dispatch.Dispatcher.Invoke(System.Action)
  fullName: Engine.Dispatch.Dispatcher.Invoke(System.Action)
  nameWithType: Dispatcher.Invoke(Action)
- uid: Engine.Dispatch.Dispatcher.Invoke*
  name: Invoke
  href: api/Engine.Dispatch.Dispatcher.yml
  commentId: Overload:Engine.Dispatch.Dispatcher.Invoke
  isSpec: "True"
  fullName: Engine.Dispatch.Dispatcher.Invoke
  nameWithType: Dispatcher.Invoke
- uid: Engine.Dispatch.DispatchManager
  name: DispatchManager
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: T:Engine.Dispatch.DispatchManager
  fullName: Engine.Dispatch.DispatchManager
  nameWithType: DispatchManager
- uid: Engine.Dispatch.DispatchManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: M:Engine.Dispatch.DispatchManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Dispatch.DispatchManager.init(System.Object[])
  fullName.vb: Engine.Dispatch.DispatchManager.init(System.Object())
  nameWithType: DispatchManager.init(Object[])
  nameWithType.vb: DispatchManager.init(Object())
- uid: Engine.Dispatch.DispatchManager.init*
  name: init
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: Overload:Engine.Dispatch.DispatchManager.init
  isSpec: "True"
  fullName: Engine.Dispatch.DispatchManager.init
  nameWithType: DispatchManager.init
- uid: Engine.Dispatch.DispatchManager.shutdown
  name: shutdown()
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: M:Engine.Dispatch.DispatchManager.shutdown
  fullName: Engine.Dispatch.DispatchManager.shutdown()
  nameWithType: DispatchManager.shutdown()
- uid: Engine.Dispatch.DispatchManager.shutdown*
  name: shutdown
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: Overload:Engine.Dispatch.DispatchManager.shutdown
  isSpec: "True"
  fullName: Engine.Dispatch.DispatchManager.shutdown
  nameWithType: DispatchManager.shutdown
- uid: Engine.Dispatch.DispatchManager.update
  name: update()
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: M:Engine.Dispatch.DispatchManager.update
  fullName: Engine.Dispatch.DispatchManager.update()
  nameWithType: DispatchManager.update()
- uid: Engine.Dispatch.DispatchManager.update*
  name: update
  href: api/Engine.Dispatch.DispatchManager.yml
  commentId: Overload:Engine.Dispatch.DispatchManager.update
  isSpec: "True"
  fullName: Engine.Dispatch.DispatchManager.update
  nameWithType: DispatchManager.update
- uid: Engine.Factory
  name: Engine.Factory
  href: api/Engine.Factory.yml
  commentId: N:Engine.Factory
  fullName: Engine.Factory
  nameWithType: Engine.Factory
- uid: Engine.Factory.Manager
  name: Manager
  href: api/Engine.Factory.Manager.yml
  commentId: T:Engine.Factory.Manager
  fullName: Engine.Factory.Manager
  nameWithType: Manager
- uid: Engine.Factory.Manager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Factory.Manager.yml
  commentId: M:Engine.Factory.Manager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Factory.Manager.init(System.Object[])
  fullName.vb: Engine.Factory.Manager.init(System.Object())
  nameWithType: Manager.init(Object[])
  nameWithType.vb: Manager.init(Object())
- uid: Engine.Factory.Manager.init*
  name: init
  href: api/Engine.Factory.Manager.yml
  commentId: Overload:Engine.Factory.Manager.init
  isSpec: "True"
  fullName: Engine.Factory.Manager.init
  nameWithType: Manager.init
- uid: Engine.Factory.Manager.shutdown
  name: shutdown()
  href: api/Engine.Factory.Manager.yml
  commentId: M:Engine.Factory.Manager.shutdown
  fullName: Engine.Factory.Manager.shutdown()
  nameWithType: Manager.shutdown()
- uid: Engine.Factory.Manager.shutdown*
  name: shutdown
  href: api/Engine.Factory.Manager.yml
  commentId: Overload:Engine.Factory.Manager.shutdown
  isSpec: "True"
  fullName: Engine.Factory.Manager.shutdown
  nameWithType: Manager.shutdown
- uid: Engine.Factory.Manager.update
  name: update()
  href: api/Engine.Factory.Manager.yml
  commentId: M:Engine.Factory.Manager.update
  fullName: Engine.Factory.Manager.update()
  nameWithType: Manager.update()
- uid: Engine.Factory.Manager.update*
  name: update
  href: api/Engine.Factory.Manager.yml
  commentId: Overload:Engine.Factory.Manager.update
  isSpec: "True"
  fullName: Engine.Factory.Manager.update
  nameWithType: Manager.update
- uid: Engine.GlobalCoreBase
  name: GlobalCoreBase
  href: api/Engine.GlobalCoreBase.yml
  commentId: T:Engine.GlobalCoreBase
  fullName: Engine.GlobalCoreBase
  nameWithType: GlobalCoreBase
- uid: Engine.Input
  name: Engine.Input
  href: api/Engine.Input.yml
  commentId: N:Engine.Input
  fullName: Engine.Input
  nameWithType: Engine.Input
- uid: Engine.Input.ClientInputManager
  name: ClientInputManager
  href: api/Engine.Input.ClientInputManager.yml
  commentId: T:Engine.Input.ClientInputManager
  fullName: Engine.Input.ClientInputManager
  nameWithType: ClientInputManager
- uid: Engine.Input.ClientInputManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Input.ClientInputManager.yml
  commentId: M:Engine.Input.ClientInputManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Input.ClientInputManager.init(System.Object[])
  fullName.vb: Engine.Input.ClientInputManager.init(System.Object())
  nameWithType: ClientInputManager.init(Object[])
  nameWithType.vb: ClientInputManager.init(Object())
- uid: Engine.Input.ClientInputManager.init*
  name: init
  href: api/Engine.Input.ClientInputManager.yml
  commentId: Overload:Engine.Input.ClientInputManager.init
  isSpec: "True"
  fullName: Engine.Input.ClientInputManager.init
  nameWithType: ClientInputManager.init
- uid: Engine.Input.ClientInputManager.shutdown
  name: shutdown()
  href: api/Engine.Input.ClientInputManager.yml
  commentId: M:Engine.Input.ClientInputManager.shutdown
  fullName: Engine.Input.ClientInputManager.shutdown()
  nameWithType: ClientInputManager.shutdown()
- uid: Engine.Input.ClientInputManager.shutdown*
  name: shutdown
  href: api/Engine.Input.ClientInputManager.yml
  commentId: Overload:Engine.Input.ClientInputManager.shutdown
  isSpec: "True"
  fullName: Engine.Input.ClientInputManager.shutdown
  nameWithType: ClientInputManager.shutdown
- uid: Engine.Input.ClientInputManager.update
  name: update()
  href: api/Engine.Input.ClientInputManager.yml
  commentId: M:Engine.Input.ClientInputManager.update
  fullName: Engine.Input.ClientInputManager.update()
  nameWithType: ClientInputManager.update()
- uid: Engine.Input.ClientInputManager.update*
  name: update
  href: api/Engine.Input.ClientInputManager.yml
  commentId: Overload:Engine.Input.ClientInputManager.update
  isSpec: "True"
  fullName: Engine.Input.ClientInputManager.update
  nameWithType: ClientInputManager.update
- uid: Engine.Logging
  name: Engine.Logging
  href: api/Engine.Logging.yml
  commentId: N:Engine.Logging
  fullName: Engine.Logging
  nameWithType: Engine.Logging
- uid: Engine.Logging.Log
  name: Log
  href: api/Engine.Logging.Log.yml
  commentId: T:Engine.Logging.Log
  fullName: Engine.Logging.Log
  nameWithType: Log
- uid: Engine.Logging.Log.LogError(System.String)
  name: LogError(String)
  href: api/Engine.Logging.Log.yml
  commentId: M:Engine.Logging.Log.LogError(System.String)
  fullName: Engine.Logging.Log.LogError(System.String)
  nameWithType: Log.LogError(String)
- uid: Engine.Logging.Log.LogError*
  name: LogError
  href: api/Engine.Logging.Log.yml
  commentId: Overload:Engine.Logging.Log.LogError
  isSpec: "True"
  fullName: Engine.Logging.Log.LogError
  nameWithType: Log.LogError
- uid: Engine.Logging.Log.LogMsg(System.String)
  name: LogMsg(String)
  href: api/Engine.Logging.Log.yml
  commentId: M:Engine.Logging.Log.LogMsg(System.String)
  fullName: Engine.Logging.Log.LogMsg(System.String)
  nameWithType: Log.LogMsg(String)
- uid: Engine.Logging.Log.LogMsg*
  name: LogMsg
  href: api/Engine.Logging.Log.yml
  commentId: Overload:Engine.Logging.Log.LogMsg
  isSpec: "True"
  fullName: Engine.Logging.Log.LogMsg
  nameWithType: Log.LogMsg
- uid: Engine.Logging.LogLevel
  name: LogLevel
  href: api/Engine.Logging.LogLevel.yml
  commentId: T:Engine.Logging.LogLevel
  fullName: Engine.Logging.LogLevel
  nameWithType: LogLevel
- uid: Engine.Logging.LogLevel.ALL
  name: ALL
  href: api/Engine.Logging.LogLevel.yml
  commentId: F:Engine.Logging.LogLevel.ALL
  fullName: Engine.Logging.LogLevel.ALL
  nameWithType: LogLevel.ALL
- uid: Engine.Logging.LogLevel.ERRORS
  name: ERRORS
  href: api/Engine.Logging.LogLevel.yml
  commentId: F:Engine.Logging.LogLevel.ERRORS
  fullName: Engine.Logging.LogLevel.ERRORS
  nameWithType: LogLevel.ERRORS
- uid: Engine.Logging.LogLevel.NONE
  name: NONE
  href: api/Engine.Logging.LogLevel.yml
  commentId: F:Engine.Logging.LogLevel.NONE
  fullName: Engine.Logging.LogLevel.NONE
  nameWithType: LogLevel.NONE
- uid: Engine.Logging.LogManager
  name: LogManager
  href: api/Engine.Logging.LogManager.yml
  commentId: T:Engine.Logging.LogManager
  fullName: Engine.Logging.LogManager
  nameWithType: LogManager
- uid: Engine.Logging.LogManager.getLogLevel
  name: getLogLevel()
  href: api/Engine.Logging.LogManager.yml
  commentId: M:Engine.Logging.LogManager.getLogLevel
  fullName: Engine.Logging.LogManager.getLogLevel()
  nameWithType: LogManager.getLogLevel()
- uid: Engine.Logging.LogManager.getLogLevel*
  name: getLogLevel
  href: api/Engine.Logging.LogManager.yml
  commentId: Overload:Engine.Logging.LogManager.getLogLevel
  isSpec: "True"
  fullName: Engine.Logging.LogManager.getLogLevel
  nameWithType: LogManager.getLogLevel
- uid: Engine.Logging.LogManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Logging.LogManager.yml
  commentId: M:Engine.Logging.LogManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Logging.LogManager.init(System.Object[])
  fullName.vb: Engine.Logging.LogManager.init(System.Object())
  nameWithType: LogManager.init(Object[])
  nameWithType.vb: LogManager.init(Object())
- uid: Engine.Logging.LogManager.init*
  name: init
  href: api/Engine.Logging.LogManager.yml
  commentId: Overload:Engine.Logging.LogManager.init
  isSpec: "True"
  fullName: Engine.Logging.LogManager.init
  nameWithType: LogManager.init
- uid: Engine.Logging.LogManager.SetLogLevel(Engine.Logging.LogLevel)
  name: SetLogLevel(LogLevel)
  href: api/Engine.Logging.LogManager.yml
  commentId: M:Engine.Logging.LogManager.SetLogLevel(Engine.Logging.LogLevel)
  fullName: Engine.Logging.LogManager.SetLogLevel(Engine.Logging.LogLevel)
  nameWithType: LogManager.SetLogLevel(LogLevel)
- uid: Engine.Logging.LogManager.SetLogLevel*
  name: SetLogLevel
  href: api/Engine.Logging.LogManager.yml
  commentId: Overload:Engine.Logging.LogManager.SetLogLevel
  isSpec: "True"
  fullName: Engine.Logging.LogManager.SetLogLevel
  nameWithType: LogManager.SetLogLevel
- uid: Engine.Logging.LogManager.shutdown
  name: shutdown()
  href: api/Engine.Logging.LogManager.yml
  commentId: M:Engine.Logging.LogManager.shutdown
  fullName: Engine.Logging.LogManager.shutdown()
  nameWithType: LogManager.shutdown()
- uid: Engine.Logging.LogManager.shutdown*
  name: shutdown
  href: api/Engine.Logging.LogManager.yml
  commentId: Overload:Engine.Logging.LogManager.shutdown
  isSpec: "True"
  fullName: Engine.Logging.LogManager.shutdown
  nameWithType: LogManager.shutdown
- uid: Engine.Logging.LogManager.update
  name: update()
  href: api/Engine.Logging.LogManager.yml
  commentId: M:Engine.Logging.LogManager.update
  fullName: Engine.Logging.LogManager.update()
  nameWithType: LogManager.update()
- uid: Engine.Logging.LogManager.update*
  name: update
  href: api/Engine.Logging.LogManager.yml
  commentId: Overload:Engine.Logging.LogManager.update
  isSpec: "True"
  fullName: Engine.Logging.LogManager.update
  nameWithType: LogManager.update
- uid: Engine.Networking
  name: Engine.Networking
  href: api/Engine.Networking.yml
  commentId: N:Engine.Networking
  fullName: Engine.Networking
  nameWithType: Engine.Networking
- uid: Engine.Networking.ConnectionManager
  name: ConnectionManager
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: T:Engine.Networking.ConnectionManager
  fullName: Engine.Networking.ConnectionManager
  nameWithType: ConnectionManager
- uid: Engine.Networking.ConnectionManager.Disconnect
  name: Disconnect()
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.Disconnect
  fullName: Engine.Networking.ConnectionManager.Disconnect()
  nameWithType: ConnectionManager.Disconnect()
- uid: Engine.Networking.ConnectionManager.Disconnect*
  name: Disconnect
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.Disconnect
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.Disconnect
  nameWithType: ConnectionManager.Disconnect
- uid: Engine.Networking.ConnectionManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.Networking.ConnectionManager.init(System.Object[])
  fullName.vb: Engine.Networking.ConnectionManager.init(System.Object())
  nameWithType: ConnectionManager.init(Object[])
  nameWithType.vb: ConnectionManager.init(Object())
- uid: Engine.Networking.ConnectionManager.init*
  name: init
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.init
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.init
  nameWithType: ConnectionManager.init
- uid: Engine.Networking.ConnectionManager.isServer
  name: isServer
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: P:Engine.Networking.ConnectionManager.isServer
  fullName: Engine.Networking.ConnectionManager.isServer
  nameWithType: ConnectionManager.isServer
- uid: Engine.Networking.ConnectionManager.isServer*
  name: isServer
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.isServer
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.isServer
  nameWithType: ConnectionManager.isServer
- uid: Engine.Networking.ConnectionManager.ListenerType
  name: ConnectionManager.ListenerType
  href: api/Engine.Networking.ConnectionManager.ListenerType.yml
  commentId: T:Engine.Networking.ConnectionManager.ListenerType
  fullName: Engine.Networking.ConnectionManager.ListenerType
  nameWithType: ConnectionManager.ListenerType
- uid: Engine.Networking.ConnectionManager.ListenerType.CLIENT
  name: CLIENT
  href: api/Engine.Networking.ConnectionManager.ListenerType.yml
  commentId: F:Engine.Networking.ConnectionManager.ListenerType.CLIENT
  fullName: Engine.Networking.ConnectionManager.ListenerType.CLIENT
  nameWithType: ConnectionManager.ListenerType.CLIENT
- uid: Engine.Networking.ConnectionManager.ListenerType.SERVER
  name: SERVER
  href: api/Engine.Networking.ConnectionManager.ListenerType.yml
  commentId: F:Engine.Networking.ConnectionManager.ListenerType.SERVER
  fullName: Engine.Networking.ConnectionManager.ListenerType.SERVER
  nameWithType: ConnectionManager.ListenerType.SERVER
- uid: Engine.Networking.ConnectionManager.NotifyClientConnected
  name: NotifyClientConnected
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: E:Engine.Networking.ConnectionManager.NotifyClientConnected
  fullName: Engine.Networking.ConnectionManager.NotifyClientConnected
  nameWithType: ConnectionManager.NotifyClientConnected
- uid: Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
  name: ConnectionManager.NotifyClientConnectedDelegate
  href: api/Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate.yml
  commentId: T:Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyClientConnectedDelegate
  nameWithType: ConnectionManager.NotifyClientConnectedDelegate
- uid: Engine.Networking.ConnectionManager.NotifyClientDisconnected
  name: NotifyClientDisconnected
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: E:Engine.Networking.ConnectionManager.NotifyClientDisconnected
  fullName: Engine.Networking.ConnectionManager.NotifyClientDisconnected
  nameWithType: ConnectionManager.NotifyClientDisconnected
- uid: Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
  name: ConnectionManager.NotifyClientDisconnectedDelegate
  href: api/Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate.yml
  commentId: T:Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyClientDisconnectedDelegate
  nameWithType: ConnectionManager.NotifyClientDisconnectedDelegate
- uid: Engine.Networking.ConnectionManager.NotifyFailedConnect
  name: NotifyFailedConnect
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: E:Engine.Networking.ConnectionManager.NotifyFailedConnect
  fullName: Engine.Networking.ConnectionManager.NotifyFailedConnect
  nameWithType: ConnectionManager.NotifyFailedConnect
- uid: Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
  name: ConnectionManager.NotifyFailedConnectDelegate
  href: api/Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate.yml
  commentId: T:Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyFailedConnectDelegate
  nameWithType: ConnectionManager.NotifyFailedConnectDelegate
- uid: Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  name: NotifyOnConnectedToServer
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: E:Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  fullName: Engine.Networking.ConnectionManager.NotifyOnConnectedToServer
  nameWithType: ConnectionManager.NotifyOnConnectedToServer
- uid: Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
  name: ConnectionManager.NotifyOnConnectedToServerDelegate
  href: api/Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate.yml
  commentId: T:Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyOnConnectedToServerDelegate
  nameWithType: ConnectionManager.NotifyOnConnectedToServerDelegate
- uid: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  name: NotifyOnDisconnectedFromServer
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: E:Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  fullName: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServer
  nameWithType: ConnectionManager.NotifyOnDisconnectedFromServer
- uid: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  name: ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  href: api/Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate.yml
  commentId: T:Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyOnDisconnectedFromServerDelegate
  nameWithType: ConnectionManager.NotifyOnDisconnectedFromServerDelegate
- uid: Engine.Networking.ConnectionManager.NotifyPacketReceived
  name: NotifyPacketReceived
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: E:Engine.Networking.ConnectionManager.NotifyPacketReceived
  fullName: Engine.Networking.ConnectionManager.NotifyPacketReceived
  nameWithType: ConnectionManager.NotifyPacketReceived
- uid: Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
  name: ConnectionManager.NotifyPacketReceivedDelegate
  href: api/Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate.yml
  commentId: T:Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
  fullName: Engine.Networking.ConnectionManager.NotifyPacketReceivedDelegate
  nameWithType: ConnectionManager.NotifyPacketReceivedDelegate
- uid: Engine.Networking.ConnectionManager.sendPacketToClient(Unity.Networking.Transport.NetworkConnection,Engine.Networking.Packet)
  name: sendPacketToClient(NetworkConnection, Packet)
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.sendPacketToClient(Unity.Networking.Transport.NetworkConnection,Engine.Networking.Packet)
  fullName: Engine.Networking.ConnectionManager.sendPacketToClient(Unity.Networking.Transport.NetworkConnection, Engine.Networking.Packet)
  nameWithType: ConnectionManager.sendPacketToClient(NetworkConnection, Packet)
- uid: Engine.Networking.ConnectionManager.sendPacketToClient*
  name: sendPacketToClient
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.sendPacketToClient
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.sendPacketToClient
  nameWithType: ConnectionManager.sendPacketToClient
- uid: Engine.Networking.ConnectionManager.sendPacketToServer(Engine.Networking.Packet)
  name: sendPacketToServer(Packet)
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.sendPacketToServer(Engine.Networking.Packet)
  fullName: Engine.Networking.ConnectionManager.sendPacketToServer(Engine.Networking.Packet)
  nameWithType: ConnectionManager.sendPacketToServer(Packet)
- uid: Engine.Networking.ConnectionManager.sendPacketToServer*
  name: sendPacketToServer
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.sendPacketToServer
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.sendPacketToServer
  nameWithType: ConnectionManager.sendPacketToServer
- uid: Engine.Networking.ConnectionManager.shutdown
  name: shutdown()
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.shutdown
  fullName: Engine.Networking.ConnectionManager.shutdown()
  nameWithType: ConnectionManager.shutdown()
- uid: Engine.Networking.ConnectionManager.shutdown*
  name: shutdown
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.shutdown
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.shutdown
  nameWithType: ConnectionManager.shutdown
- uid: Engine.Networking.ConnectionManager.Start
  name: Start()
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.Start
  fullName: Engine.Networking.ConnectionManager.Start()
  nameWithType: ConnectionManager.Start()
- uid: Engine.Networking.ConnectionManager.Start*
  name: Start
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.Start
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.Start
  nameWithType: ConnectionManager.Start
- uid: Engine.Networking.ConnectionManager.update
  name: update()
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: M:Engine.Networking.ConnectionManager.update
  fullName: Engine.Networking.ConnectionManager.update()
  nameWithType: ConnectionManager.update()
- uid: Engine.Networking.ConnectionManager.update*
  name: update
  href: api/Engine.Networking.ConnectionManager.yml
  commentId: Overload:Engine.Networking.ConnectionManager.update
  isSpec: "True"
  fullName: Engine.Networking.ConnectionManager.update
  nameWithType: ConnectionManager.update
- uid: Engine.Networking.LoginRequest_1
  name: LoginRequest_1
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: T:Engine.Networking.LoginRequest_1
  fullName: Engine.Networking.LoginRequest_1
  nameWithType: LoginRequest_1
- uid: Engine.Networking.LoginRequest_1.email
  name: email
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: F:Engine.Networking.LoginRequest_1.email
  fullName: Engine.Networking.LoginRequest_1.email
  nameWithType: LoginRequest_1.email
- uid: Engine.Networking.LoginRequest_1.getBytes
  name: getBytes()
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: M:Engine.Networking.LoginRequest_1.getBytes
  fullName: Engine.Networking.LoginRequest_1.getBytes()
  nameWithType: LoginRequest_1.getBytes()
- uid: Engine.Networking.LoginRequest_1.getBytes*
  name: getBytes
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: Overload:Engine.Networking.LoginRequest_1.getBytes
  isSpec: "True"
  fullName: Engine.Networking.LoginRequest_1.getBytes
  nameWithType: LoginRequest_1.getBytes
- uid: Engine.Networking.LoginRequest_1.password
  name: password
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: F:Engine.Networking.LoginRequest_1.password
  fullName: Engine.Networking.LoginRequest_1.password
  nameWithType: LoginRequest_1.password
- uid: Engine.Networking.LoginRequest_1.readPacket(System.Byte[])
  name: readPacket(Byte[])
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: M:Engine.Networking.LoginRequest_1.readPacket(System.Byte[])
  name.vb: readPacket(Byte())
  fullName: Engine.Networking.LoginRequest_1.readPacket(System.Byte[])
  fullName.vb: Engine.Networking.LoginRequest_1.readPacket(System.Byte())
  nameWithType: LoginRequest_1.readPacket(Byte[])
  nameWithType.vb: LoginRequest_1.readPacket(Byte())
- uid: Engine.Networking.LoginRequest_1.readPacket*
  name: readPacket
  href: api/Engine.Networking.LoginRequest_1.yml
  commentId: Overload:Engine.Networking.LoginRequest_1.readPacket
  isSpec: "True"
  fullName: Engine.Networking.LoginRequest_1.readPacket
  nameWithType: LoginRequest_1.readPacket
- uid: Engine.Networking.LoginResponse_2
  name: LoginResponse_2
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: T:Engine.Networking.LoginResponse_2
  fullName: Engine.Networking.LoginResponse_2
  nameWithType: LoginResponse_2
- uid: Engine.Networking.LoginResponse_2.accept
  name: accept
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: F:Engine.Networking.LoginResponse_2.accept
  fullName: Engine.Networking.LoginResponse_2.accept
  nameWithType: LoginResponse_2.accept
- uid: Engine.Networking.LoginResponse_2.errorResponse
  name: errorResponse
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: F:Engine.Networking.LoginResponse_2.errorResponse
  fullName: Engine.Networking.LoginResponse_2.errorResponse
  nameWithType: LoginResponse_2.errorResponse
- uid: Engine.Networking.LoginResponse_2.getBytes
  name: getBytes()
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: M:Engine.Networking.LoginResponse_2.getBytes
  fullName: Engine.Networking.LoginResponse_2.getBytes()
  nameWithType: LoginResponse_2.getBytes()
- uid: Engine.Networking.LoginResponse_2.getBytes*
  name: getBytes
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: Overload:Engine.Networking.LoginResponse_2.getBytes
  isSpec: "True"
  fullName: Engine.Networking.LoginResponse_2.getBytes
  nameWithType: LoginResponse_2.getBytes
- uid: Engine.Networking.LoginResponse_2.readPacket(System.Byte[])
  name: readPacket(Byte[])
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: M:Engine.Networking.LoginResponse_2.readPacket(System.Byte[])
  name.vb: readPacket(Byte())
  fullName: Engine.Networking.LoginResponse_2.readPacket(System.Byte[])
  fullName.vb: Engine.Networking.LoginResponse_2.readPacket(System.Byte())
  nameWithType: LoginResponse_2.readPacket(Byte[])
  nameWithType.vb: LoginResponse_2.readPacket(Byte())
- uid: Engine.Networking.LoginResponse_2.readPacket*
  name: readPacket
  href: api/Engine.Networking.LoginResponse_2.yml
  commentId: Overload:Engine.Networking.LoginResponse_2.readPacket
  isSpec: "True"
  fullName: Engine.Networking.LoginResponse_2.readPacket
  nameWithType: LoginResponse_2.readPacket
- uid: Engine.Networking.Packet
  name: Packet
  href: api/Engine.Networking.Packet.yml
  commentId: T:Engine.Networking.Packet
  fullName: Engine.Networking.Packet
  nameWithType: Packet
- uid: Engine.Networking.Packet.getBytes
  name: getBytes()
  href: api/Engine.Networking.Packet.yml
  commentId: M:Engine.Networking.Packet.getBytes
  fullName: Engine.Networking.Packet.getBytes()
  nameWithType: Packet.getBytes()
- uid: Engine.Networking.Packet.getBytes*
  name: getBytes
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.getBytes
  isSpec: "True"
  fullName: Engine.Networking.Packet.getBytes
  nameWithType: Packet.getBytes
- uid: Engine.Networking.Packet.packetDescription
  name: packetDescription
  href: api/Engine.Networking.Packet.yml
  commentId: P:Engine.Networking.Packet.packetDescription
  fullName: Engine.Networking.Packet.packetDescription
  nameWithType: Packet.packetDescription
- uid: Engine.Networking.Packet.packetDescription*
  name: packetDescription
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.packetDescription
  isSpec: "True"
  fullName: Engine.Networking.Packet.packetDescription
  nameWithType: Packet.packetDescription
- uid: Engine.Networking.Packet.packetId
  name: packetId
  href: api/Engine.Networking.Packet.yml
  commentId: P:Engine.Networking.Packet.packetId
  fullName: Engine.Networking.Packet.packetId
  nameWithType: Packet.packetId
- uid: Engine.Networking.Packet.packetId*
  name: packetId
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.packetId
  isSpec: "True"
  fullName: Engine.Networking.Packet.packetId
  nameWithType: Packet.packetId
- uid: Engine.Networking.Packet.packetName
  name: packetName
  href: api/Engine.Networking.Packet.yml
  commentId: P:Engine.Networking.Packet.packetName
  fullName: Engine.Networking.Packet.packetName
  nameWithType: Packet.packetName
- uid: Engine.Networking.Packet.packetName*
  name: packetName
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.packetName
  isSpec: "True"
  fullName: Engine.Networking.Packet.packetName
  nameWithType: Packet.packetName
- uid: Engine.Networking.Packet.packetReliabilityScheme
  name: packetReliabilityScheme
  href: api/Engine.Networking.Packet.yml
  commentId: P:Engine.Networking.Packet.packetReliabilityScheme
  fullName: Engine.Networking.Packet.packetReliabilityScheme
  nameWithType: Packet.packetReliabilityScheme
- uid: Engine.Networking.Packet.packetReliabilityScheme*
  name: packetReliabilityScheme
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.packetReliabilityScheme
  isSpec: "True"
  fullName: Engine.Networking.Packet.packetReliabilityScheme
  nameWithType: Packet.packetReliabilityScheme
- uid: Engine.Networking.Packet.packetTarget
  name: packetTarget
  href: api/Engine.Networking.Packet.yml
  commentId: P:Engine.Networking.Packet.packetTarget
  fullName: Engine.Networking.Packet.packetTarget
  nameWithType: Packet.packetTarget
- uid: Engine.Networking.Packet.packetTarget*
  name: packetTarget
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.packetTarget
  isSpec: "True"
  fullName: Engine.Networking.Packet.packetTarget
  nameWithType: Packet.packetTarget
- uid: Engine.Networking.Packet.readPacket(System.Byte[])
  name: readPacket(Byte[])
  href: api/Engine.Networking.Packet.yml
  commentId: M:Engine.Networking.Packet.readPacket(System.Byte[])
  name.vb: readPacket(Byte())
  fullName: Engine.Networking.Packet.readPacket(System.Byte[])
  fullName.vb: Engine.Networking.Packet.readPacket(System.Byte())
  nameWithType: Packet.readPacket(Byte[])
  nameWithType.vb: Packet.readPacket(Byte())
- uid: Engine.Networking.Packet.readPacket*
  name: readPacket
  href: api/Engine.Networking.Packet.yml
  commentId: Overload:Engine.Networking.Packet.readPacket
  isSpec: "True"
  fullName: Engine.Networking.Packet.readPacket
  nameWithType: Packet.readPacket
- uid: Engine.Networking.PacketAttribute
  name: PacketAttribute
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: T:Engine.Networking.PacketAttribute
  fullName: Engine.Networking.PacketAttribute
  nameWithType: PacketAttribute
- uid: Engine.Networking.PacketAttribute.#ctor(System.Int32,System.String,System.String,Engine.Networking.ReliabilityScheme,System.String)
  name: PacketAttribute(Int32, String, String, ReliabilityScheme, String)
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: M:Engine.Networking.PacketAttribute.#ctor(System.Int32,System.String,System.String,Engine.Networking.ReliabilityScheme,System.String)
  fullName: Engine.Networking.PacketAttribute.PacketAttribute(System.Int32, System.String, System.String, Engine.Networking.ReliabilityScheme, System.String)
  nameWithType: PacketAttribute.PacketAttribute(Int32, String, String, ReliabilityScheme, String)
- uid: Engine.Networking.PacketAttribute.#ctor*
  name: PacketAttribute
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: Overload:Engine.Networking.PacketAttribute.#ctor
  isSpec: "True"
  fullName: Engine.Networking.PacketAttribute.PacketAttribute
  nameWithType: PacketAttribute.PacketAttribute
- uid: Engine.Networking.PacketAttribute.Description
  name: Description
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: P:Engine.Networking.PacketAttribute.Description
  fullName: Engine.Networking.PacketAttribute.Description
  nameWithType: PacketAttribute.Description
- uid: Engine.Networking.PacketAttribute.Description*
  name: Description
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: Overload:Engine.Networking.PacketAttribute.Description
  isSpec: "True"
  fullName: Engine.Networking.PacketAttribute.Description
  nameWithType: PacketAttribute.Description
- uid: Engine.Networking.PacketAttribute.Name
  name: Name
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: P:Engine.Networking.PacketAttribute.Name
  fullName: Engine.Networking.PacketAttribute.Name
  nameWithType: PacketAttribute.Name
- uid: Engine.Networking.PacketAttribute.Name*
  name: Name
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: Overload:Engine.Networking.PacketAttribute.Name
  isSpec: "True"
  fullName: Engine.Networking.PacketAttribute.Name
  nameWithType: PacketAttribute.Name
- uid: Engine.Networking.PacketAttribute.PacketId
  name: PacketId
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: P:Engine.Networking.PacketAttribute.PacketId
  fullName: Engine.Networking.PacketAttribute.PacketId
  nameWithType: PacketAttribute.PacketId
- uid: Engine.Networking.PacketAttribute.PacketId*
  name: PacketId
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: Overload:Engine.Networking.PacketAttribute.PacketId
  isSpec: "True"
  fullName: Engine.Networking.PacketAttribute.PacketId
  nameWithType: PacketAttribute.PacketId
- uid: Engine.Networking.PacketAttribute.ReliabilityScheme
  name: ReliabilityScheme
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: P:Engine.Networking.PacketAttribute.ReliabilityScheme
  fullName: Engine.Networking.PacketAttribute.ReliabilityScheme
  nameWithType: PacketAttribute.ReliabilityScheme
- uid: Engine.Networking.PacketAttribute.ReliabilityScheme*
  name: ReliabilityScheme
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: Overload:Engine.Networking.PacketAttribute.ReliabilityScheme
  isSpec: "True"
  fullName: Engine.Networking.PacketAttribute.ReliabilityScheme
  nameWithType: PacketAttribute.ReliabilityScheme
- uid: Engine.Networking.PacketAttribute.Target
  name: Target
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: P:Engine.Networking.PacketAttribute.Target
  fullName: Engine.Networking.PacketAttribute.Target
  nameWithType: PacketAttribute.Target
- uid: Engine.Networking.PacketAttribute.Target*
  name: Target
  href: api/Engine.Networking.PacketAttribute.yml
  commentId: Overload:Engine.Networking.PacketAttribute.Target
  isSpec: "True"
  fullName: Engine.Networking.PacketAttribute.Target
  nameWithType: PacketAttribute.Target
- uid: Engine.Networking.ReliabilityScheme
  name: ReliabilityScheme
  href: api/Engine.Networking.ReliabilityScheme.yml
  commentId: T:Engine.Networking.ReliabilityScheme
  fullName: Engine.Networking.ReliabilityScheme
  nameWithType: ReliabilityScheme
- uid: Engine.Networking.ReliabilityScheme.RELIABLE
  name: RELIABLE
  href: api/Engine.Networking.ReliabilityScheme.yml
  commentId: F:Engine.Networking.ReliabilityScheme.RELIABLE
  fullName: Engine.Networking.ReliabilityScheme.RELIABLE
  nameWithType: ReliabilityScheme.RELIABLE
- uid: Engine.Networking.ReliabilityScheme.UNRELIABLE
  name: UNRELIABLE
  href: api/Engine.Networking.ReliabilityScheme.yml
  commentId: F:Engine.Networking.ReliabilityScheme.UNRELIABLE
  fullName: Engine.Networking.ReliabilityScheme.UNRELIABLE
  nameWithType: ReliabilityScheme.UNRELIABLE
- uid: Engine.Networking.Utility
  name: Engine.Networking.Utility
  href: api/Engine.Networking.Utility.yml
  commentId: N:Engine.Networking.Utility
  fullName: Engine.Networking.Utility
  nameWithType: Engine.Networking.Utility
- uid: Engine.Networking.Utility.ByteConverter
  name: ByteConverter
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: T:Engine.Networking.Utility.ByteConverter
  fullName: Engine.Networking.Utility.ByteConverter
  nameWithType: ByteConverter
- uid: Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  name: getBool(Byte[])
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  name.vb: getBool(Byte())
  fullName: Engine.Networking.Utility.ByteConverter.getBool(System.Byte[])
  fullName.vb: Engine.Networking.Utility.ByteConverter.getBool(System.Byte())
  nameWithType: ByteConverter.getBool(Byte[])
  nameWithType.vb: ByteConverter.getBool(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getBool*
  name: getBool
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getBool
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getBool
  nameWithType: ByteConverter.getBool
- uid: Engine.Networking.Utility.ByteConverter.getBytes*
  name: getBytes
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getBytes
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getBytes
  nameWithType: ByteConverter.getBytes
- uid: Engine.Networking.Utility.ByteConverter.getBytes``1(System.Object)
  name: getBytes<T>(Object)
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getBytes``1(System.Object)
  name.vb: getBytes(Of T)(Object)
  fullName: Engine.Networking.Utility.ByteConverter.getBytes<T>(System.Object)
  fullName.vb: Engine.Networking.Utility.ByteConverter.getBytes(Of T)(System.Object)
  nameWithType: ByteConverter.getBytes<T>(Object)
  nameWithType.vb: ByteConverter.getBytes(Of T)(Object)
- uid: Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  name: getFloat(Byte[])
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  name.vb: getFloat(Byte())
  fullName: Engine.Networking.Utility.ByteConverter.getFloat(System.Byte[])
  fullName.vb: Engine.Networking.Utility.ByteConverter.getFloat(System.Byte())
  nameWithType: ByteConverter.getFloat(Byte[])
  nameWithType.vb: ByteConverter.getFloat(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getFloat*
  name: getFloat
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getFloat
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getFloat
  nameWithType: ByteConverter.getFloat
- uid: Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  name: getInt(Byte[])
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  name.vb: getInt(Byte())
  fullName: Engine.Networking.Utility.ByteConverter.getInt(System.Byte[])
  fullName.vb: Engine.Networking.Utility.ByteConverter.getInt(System.Byte())
  nameWithType: ByteConverter.getInt(Byte[])
  nameWithType.vb: ByteConverter.getInt(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getInt*
  name: getInt
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getInt
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getInt
  nameWithType: ByteConverter.getInt
- uid: Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  name: getLong(Byte[])
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  name.vb: getLong(Byte())
  fullName: Engine.Networking.Utility.ByteConverter.getLong(System.Byte[])
  fullName.vb: Engine.Networking.Utility.ByteConverter.getLong(System.Byte())
  nameWithType: ByteConverter.getLong(Byte[])
  nameWithType.vb: ByteConverter.getLong(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getLong*
  name: getLong
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getLong
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getLong
  nameWithType: ByteConverter.getLong
- uid: Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  name: getShort(Byte[])
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  name.vb: getShort(Byte())
  fullName: Engine.Networking.Utility.ByteConverter.getShort(System.Byte[])
  fullName.vb: Engine.Networking.Utility.ByteConverter.getShort(System.Byte())
  nameWithType: ByteConverter.getShort(Byte[])
  nameWithType.vb: ByteConverter.getShort(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getShort*
  name: getShort
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getShort
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getShort
  nameWithType: ByteConverter.getShort
- uid: Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  name: getString(Byte[])
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: M:Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  name.vb: getString(Byte())
  fullName: Engine.Networking.Utility.ByteConverter.getString(System.Byte[])
  fullName.vb: Engine.Networking.Utility.ByteConverter.getString(System.Byte())
  nameWithType: ByteConverter.getString(Byte[])
  nameWithType.vb: ByteConverter.getString(Byte())
- uid: Engine.Networking.Utility.ByteConverter.getString*
  name: getString
  href: api/Engine.Networking.Utility.ByteConverter.yml
  commentId: Overload:Engine.Networking.Utility.ByteConverter.getString
  isSpec: "True"
  fullName: Engine.Networking.Utility.ByteConverter.getString
  nameWithType: ByteConverter.getString
- uid: Engine.Networking.Utility.PacketReader
  name: PacketReader
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: T:Engine.Networking.Utility.PacketReader
  fullName: Engine.Networking.Utility.PacketReader
  nameWithType: PacketReader
- uid: Engine.Networking.Utility.PacketReader.ReadBool(System.Byte[]@)
  name: ReadBool(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadBool(System.Byte[]@)
  name.vb: ReadBool(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadBool(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadBool(ByRef System.Byte())
  nameWithType: PacketReader.ReadBool(ref Byte[])
  nameWithType.vb: PacketReader.ReadBool(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadBool*
  name: ReadBool
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadBool
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadBool
  nameWithType: PacketReader.ReadBool
- uid: Engine.Networking.Utility.PacketReader.ReadByteArray(System.Byte[]@)
  name: ReadByteArray(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadByteArray(System.Byte[]@)
  name.vb: ReadByteArray(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadByteArray(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadByteArray(ByRef System.Byte())
  nameWithType: PacketReader.ReadByteArray(ref Byte[])
  nameWithType.vb: PacketReader.ReadByteArray(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadByteArray*
  name: ReadByteArray
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadByteArray
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadByteArray
  nameWithType: PacketReader.ReadByteArray
- uid: Engine.Networking.Utility.PacketReader.ReadFloat(System.Byte[]@)
  name: ReadFloat(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadFloat(System.Byte[]@)
  name.vb: ReadFloat(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadFloat(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadFloat(ByRef System.Byte())
  nameWithType: PacketReader.ReadFloat(ref Byte[])
  nameWithType.vb: PacketReader.ReadFloat(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadFloat*
  name: ReadFloat
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadFloat
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadFloat
  nameWithType: PacketReader.ReadFloat
- uid: Engine.Networking.Utility.PacketReader.ReadInt(System.Byte[]@)
  name: ReadInt(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadInt(System.Byte[]@)
  name.vb: ReadInt(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadInt(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadInt(ByRef System.Byte())
  nameWithType: PacketReader.ReadInt(ref Byte[])
  nameWithType.vb: PacketReader.ReadInt(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadInt*
  name: ReadInt
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadInt
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadInt
  nameWithType: PacketReader.ReadInt
- uid: Engine.Networking.Utility.PacketReader.ReadLong(System.Byte[]@)
  name: ReadLong(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadLong(System.Byte[]@)
  name.vb: ReadLong(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadLong(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadLong(ByRef System.Byte())
  nameWithType: PacketReader.ReadLong(ref Byte[])
  nameWithType.vb: PacketReader.ReadLong(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadLong*
  name: ReadLong
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadLong
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadLong
  nameWithType: PacketReader.ReadLong
- uid: Engine.Networking.Utility.PacketReader.ReadShort(System.Byte[]@)
  name: ReadShort(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadShort(System.Byte[]@)
  name.vb: ReadShort(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadShort(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadShort(ByRef System.Byte())
  nameWithType: PacketReader.ReadShort(ref Byte[])
  nameWithType.vb: PacketReader.ReadShort(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadShort*
  name: ReadShort
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadShort
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadShort
  nameWithType: PacketReader.ReadShort
- uid: Engine.Networking.Utility.PacketReader.ReadString(System.Byte[]@)
  name: ReadString(ref Byte[])
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: M:Engine.Networking.Utility.PacketReader.ReadString(System.Byte[]@)
  name.vb: ReadString(ByRef Byte())
  fullName: Engine.Networking.Utility.PacketReader.ReadString(ref System.Byte[])
  fullName.vb: Engine.Networking.Utility.PacketReader.ReadString(ByRef System.Byte())
  nameWithType: PacketReader.ReadString(ref Byte[])
  nameWithType.vb: PacketReader.ReadString(ByRef Byte())
- uid: Engine.Networking.Utility.PacketReader.ReadString*
  name: ReadString
  href: api/Engine.Networking.Utility.PacketReader.yml
  commentId: Overload:Engine.Networking.Utility.PacketReader.ReadString
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketReader.ReadString
  nameWithType: PacketReader.ReadString
- uid: Engine.Networking.Utility.PacketWriter
  name: PacketWriter
  href: api/Engine.Networking.Utility.PacketWriter.yml
  commentId: T:Engine.Networking.Utility.PacketWriter
  fullName: Engine.Networking.Utility.PacketWriter
  nameWithType: PacketWriter
- uid: Engine.Networking.Utility.PacketWriter.Add*
  name: Add
  href: api/Engine.Networking.Utility.PacketWriter.yml
  commentId: Overload:Engine.Networking.Utility.PacketWriter.Add
  isSpec: "True"
  fullName: Engine.Networking.Utility.PacketWriter.Add
  nameWithType: PacketWriter.Add
- uid: Engine.Networking.Utility.PacketWriter.Add``1(System.Byte[]@,``0)
  name: Add<T>(ref Byte[], T)
  href: api/Engine.Networking.Utility.PacketWriter.yml
  commentId: M:Engine.Networking.Utility.PacketWriter.Add``1(System.Byte[]@,``0)
  name.vb: Add(Of T)(ByRef Byte(), T)
  fullName: Engine.Networking.Utility.PacketWriter.Add<T>(ref System.Byte[], T)
  fullName.vb: Engine.Networking.Utility.PacketWriter.Add(Of T)(ByRef System.Byte(), T)
  nameWithType: PacketWriter.Add<T>(ref Byte[], T)
  nameWithType.vb: PacketWriter.Add(Of T)(ByRef Byte(), T)
- uid: Engine.ServerCore
  name: ServerCore
  href: api/Engine.ServerCore.yml
  commentId: T:Engine.ServerCore
  fullName: Engine.ServerCore
  nameWithType: ServerCore
- uid: Engine.ServerCore.connectionManager
  name: connectionManager
  href: api/Engine.ServerCore.yml
  commentId: F:Engine.ServerCore.connectionManager
  fullName: Engine.ServerCore.connectionManager
  nameWithType: ServerCore.connectionManager
- uid: Engine.ServerCore.dispatchManager
  name: dispatchManager
  href: api/Engine.ServerCore.yml
  commentId: F:Engine.ServerCore.dispatchManager
  fullName: Engine.ServerCore.dispatchManager
  nameWithType: ServerCore.dispatchManager
- uid: Engine.ServerCore.logManager
  name: logManager
  href: api/Engine.ServerCore.yml
  commentId: F:Engine.ServerCore.logManager
  fullName: Engine.ServerCore.logManager
  nameWithType: ServerCore.logManager
- uid: Engine.ServerCore.serverLoginManager
  name: serverLoginManager
  href: api/Engine.ServerCore.yml
  commentId: F:Engine.ServerCore.serverLoginManager
  fullName: Engine.ServerCore.serverLoginManager
  nameWithType: ServerCore.serverLoginManager
- uid: Engine.UI
  name: Engine.UI
  href: api/Engine.UI.yml
  commentId: N:Engine.UI
  fullName: Engine.UI
  nameWithType: Engine.UI
- uid: Engine.UI.ClientUIManager
  name: ClientUIManager
  href: api/Engine.UI.ClientUIManager.yml
  commentId: T:Engine.UI.ClientUIManager
  fullName: Engine.UI.ClientUIManager
  nameWithType: ClientUIManager
- uid: Engine.UI.ClientUIManager.init(System.Object[])
  name: init(Object[])
  href: api/Engine.UI.ClientUIManager.yml
  commentId: M:Engine.UI.ClientUIManager.init(System.Object[])
  name.vb: init(Object())
  fullName: Engine.UI.ClientUIManager.init(System.Object[])
  fullName.vb: Engine.UI.ClientUIManager.init(System.Object())
  nameWithType: ClientUIManager.init(Object[])
  nameWithType.vb: ClientUIManager.init(Object())
- uid: Engine.UI.ClientUIManager.init*
  name: init
  href: api/Engine.UI.ClientUIManager.yml
  commentId: Overload:Engine.UI.ClientUIManager.init
  isSpec: "True"
  fullName: Engine.UI.ClientUIManager.init
  nameWithType: ClientUIManager.init
- uid: Engine.UI.ClientUIManager.shutdown
  name: shutdown()
  href: api/Engine.UI.ClientUIManager.yml
  commentId: M:Engine.UI.ClientUIManager.shutdown
  fullName: Engine.UI.ClientUIManager.shutdown()
  nameWithType: ClientUIManager.shutdown()
- uid: Engine.UI.ClientUIManager.shutdown*
  name: shutdown
  href: api/Engine.UI.ClientUIManager.yml
  commentId: Overload:Engine.UI.ClientUIManager.shutdown
  isSpec: "True"
  fullName: Engine.UI.ClientUIManager.shutdown
  nameWithType: ClientUIManager.shutdown
- uid: Engine.UI.ClientUIManager.update
  name: update()
  href: api/Engine.UI.ClientUIManager.yml
  commentId: M:Engine.UI.ClientUIManager.update
  fullName: Engine.UI.ClientUIManager.update()
  nameWithType: ClientUIManager.update()
- uid: Engine.UI.ClientUIManager.update*
  name: update
  href: api/Engine.UI.ClientUIManager.yml
  commentId: Overload:Engine.UI.ClientUIManager.update
  isSpec: "True"
  fullName: Engine.UI.ClientUIManager.update
  nameWithType: ClientUIManager.update
- uid: Engine.UI.UIController
  name: UIController
  href: api/Engine.UI.UIController.yml
  commentId: T:Engine.UI.UIController
  fullName: Engine.UI.UIController
  nameWithType: UIController
- uid: Engine.UI.UIController.getElement*
  name: getElement
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.getElement
  isSpec: "True"
  fullName: Engine.UI.UIController.getElement
  nameWithType: UIController.getElement
- uid: Engine.UI.UIController.getElement``1(System.String)
  name: getElement<U>(String)
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.getElement``1(System.String)
  name.vb: getElement(Of U)(String)
  fullName: Engine.UI.UIController.getElement<U>(System.String)
  fullName.vb: Engine.UI.UIController.getElement(Of U)(System.String)
  nameWithType: UIController.getElement<U>(String)
  nameWithType.vb: UIController.getElement(Of U)(String)
- uid: Engine.UI.UIController.GetPanelRenderer
  name: GetPanelRenderer()
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.GetPanelRenderer
  fullName: Engine.UI.UIController.GetPanelRenderer()
  nameWithType: UIController.GetPanelRenderer()
- uid: Engine.UI.UIController.GetPanelRenderer*
  name: GetPanelRenderer
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.GetPanelRenderer
  isSpec: "True"
  fullName: Engine.UI.UIController.GetPanelRenderer
  nameWithType: UIController.GetPanelRenderer
- uid: Engine.UI.UIController.getPlaceholderTextFieldRealValue(UnityEngine.UIElements.TextField)
  name: getPlaceholderTextFieldRealValue(TextField)
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.getPlaceholderTextFieldRealValue(UnityEngine.UIElements.TextField)
  fullName: Engine.UI.UIController.getPlaceholderTextFieldRealValue(UnityEngine.UIElements.TextField)
  nameWithType: UIController.getPlaceholderTextFieldRealValue(TextField)
- uid: Engine.UI.UIController.getPlaceholderTextFieldRealValue*
  name: getPlaceholderTextFieldRealValue
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.getPlaceholderTextFieldRealValue
  isSpec: "True"
  fullName: Engine.UI.UIController.getPlaceholderTextFieldRealValue
  nameWithType: UIController.getPlaceholderTextFieldRealValue
- uid: Engine.UI.UIController.onPanelLoaded
  name: onPanelLoaded()
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.onPanelLoaded
  fullName: Engine.UI.UIController.onPanelLoaded()
  nameWithType: UIController.onPanelLoaded()
- uid: Engine.UI.UIController.onPanelLoaded*
  name: onPanelLoaded
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.onPanelLoaded
  isSpec: "True"
  fullName: Engine.UI.UIController.onPanelLoaded
  nameWithType: UIController.onPanelLoaded
- uid: Engine.UI.UIController.RegisterFirstLetterUpperCaseFormat(UnityEngine.UIElements.TextField)
  name: RegisterFirstLetterUpperCaseFormat(TextField)
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.RegisterFirstLetterUpperCaseFormat(UnityEngine.UIElements.TextField)
  fullName: Engine.UI.UIController.RegisterFirstLetterUpperCaseFormat(UnityEngine.UIElements.TextField)
  nameWithType: UIController.RegisterFirstLetterUpperCaseFormat(TextField)
- uid: Engine.UI.UIController.RegisterFirstLetterUpperCaseFormat*
  name: RegisterFirstLetterUpperCaseFormat
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.RegisterFirstLetterUpperCaseFormat
  isSpec: "True"
  fullName: Engine.UI.UIController.RegisterFirstLetterUpperCaseFormat
  nameWithType: UIController.RegisterFirstLetterUpperCaseFormat
- uid: Engine.UI.UIController.RegisterPlaceholderTextField(UnityEngine.UIElements.TextField)
  name: RegisterPlaceholderTextField(TextField)
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.RegisterPlaceholderTextField(UnityEngine.UIElements.TextField)
  fullName: Engine.UI.UIController.RegisterPlaceholderTextField(UnityEngine.UIElements.TextField)
  nameWithType: UIController.RegisterPlaceholderTextField(TextField)
- uid: Engine.UI.UIController.RegisterPlaceholderTextField*
  name: RegisterPlaceholderTextField
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.RegisterPlaceholderTextField
  isSpec: "True"
  fullName: Engine.UI.UIController.RegisterPlaceholderTextField
  nameWithType: UIController.RegisterPlaceholderTextField
- uid: Engine.UI.UIController.RegisterPlaceholderWithPasswordFormat(UnityEngine.UIElements.TextField)
  name: RegisterPlaceholderWithPasswordFormat(TextField)
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.RegisterPlaceholderWithPasswordFormat(UnityEngine.UIElements.TextField)
  fullName: Engine.UI.UIController.RegisterPlaceholderWithPasswordFormat(UnityEngine.UIElements.TextField)
  nameWithType: UIController.RegisterPlaceholderWithPasswordFormat(TextField)
- uid: Engine.UI.UIController.RegisterPlaceholderWithPasswordFormat*
  name: RegisterPlaceholderWithPasswordFormat
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.RegisterPlaceholderWithPasswordFormat
  isSpec: "True"
  fullName: Engine.UI.UIController.RegisterPlaceholderWithPasswordFormat
  nameWithType: UIController.RegisterPlaceholderWithPasswordFormat
- uid: Engine.UI.UIController.setPanelVisibility(System.Boolean)
  name: setPanelVisibility(Boolean)
  href: api/Engine.UI.UIController.yml
  commentId: M:Engine.UI.UIController.setPanelVisibility(System.Boolean)
  fullName: Engine.UI.UIController.setPanelVisibility(System.Boolean)
  nameWithType: UIController.setPanelVisibility(Boolean)
- uid: Engine.UI.UIController.setPanelVisibility*
  name: setPanelVisibility
  href: api/Engine.UI.UIController.yml
  commentId: Overload:Engine.UI.UIController.setPanelVisibility
  isSpec: "True"
  fullName: Engine.UI.UIController.setPanelVisibility
  nameWithType: UIController.setPanelVisibility
- uid: Engine.Utility
  name: Engine.Utility
  href: api/Engine.Utility.yml
  commentId: N:Engine.Utility
  fullName: Engine.Utility
  nameWithType: Engine.Utility
- uid: Engine.Utility.StringFormatter
  name: StringFormatter
  href: api/Engine.Utility.StringFormatter.yml
  commentId: T:Engine.Utility.StringFormatter
  fullName: Engine.Utility.StringFormatter
  nameWithType: StringFormatter
- uid: Engine.Utility.StringFormatter.FirstCharToUpper(System.String)
  name: FirstCharToUpper(String)
  href: api/Engine.Utility.StringFormatter.yml
  commentId: M:Engine.Utility.StringFormatter.FirstCharToUpper(System.String)
  fullName: Engine.Utility.StringFormatter.FirstCharToUpper(System.String)
  nameWithType: StringFormatter.FirstCharToUpper(String)
- uid: Engine.Utility.StringFormatter.FirstCharToUpper*
  name: FirstCharToUpper
  href: api/Engine.Utility.StringFormatter.yml
  commentId: Overload:Engine.Utility.StringFormatter.FirstCharToUpper
  isSpec: "True"
  fullName: Engine.Utility.StringFormatter.FirstCharToUpper
  nameWithType: StringFormatter.FirstCharToUpper
- uid: Engine.Utility.TimeHandler
  name: TimeHandler
  href: api/Engine.Utility.TimeHandler.yml
  commentId: T:Engine.Utility.TimeHandler
  fullName: Engine.Utility.TimeHandler
  nameWithType: TimeHandler
- uid: Engine.Utility.TimeHandler.getMinute
  name: getMinute()
  href: api/Engine.Utility.TimeHandler.yml
  commentId: M:Engine.Utility.TimeHandler.getMinute
  fullName: Engine.Utility.TimeHandler.getMinute()
  nameWithType: TimeHandler.getMinute()
- uid: Engine.Utility.TimeHandler.getMinute*
  name: getMinute
  href: api/Engine.Utility.TimeHandler.yml
  commentId: Overload:Engine.Utility.TimeHandler.getMinute
  isSpec: "True"
  fullName: Engine.Utility.TimeHandler.getMinute
  nameWithType: TimeHandler.getMinute
- uid: Engine.Utility.TimeHandler.getTimeInMilliseconds
  name: getTimeInMilliseconds()
  href: api/Engine.Utility.TimeHandler.yml
  commentId: M:Engine.Utility.TimeHandler.getTimeInMilliseconds
  fullName: Engine.Utility.TimeHandler.getTimeInMilliseconds()
  nameWithType: TimeHandler.getTimeInMilliseconds()
- uid: Engine.Utility.TimeHandler.getTimeInMilliseconds*
  name: getTimeInMilliseconds
  href: api/Engine.Utility.TimeHandler.yml
  commentId: Overload:Engine.Utility.TimeHandler.getTimeInMilliseconds
  isSpec: "True"
  fullName: Engine.Utility.TimeHandler.getTimeInMilliseconds
  nameWithType: TimeHandler.getTimeInMilliseconds
